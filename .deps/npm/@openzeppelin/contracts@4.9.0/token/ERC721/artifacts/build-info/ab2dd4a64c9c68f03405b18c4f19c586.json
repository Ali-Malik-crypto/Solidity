{
	"id": "ab2dd4a64c9c68f03405b18c4f19c586",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        // require(\n        //     _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n        //     \"ERC721: approve caller is not token owner or approved for all\"\n        // );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":628:17017  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup4\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":628:17017  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_25:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_25)\ntag_27:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_29:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_30:\n    /* \"#utility.yul\":1282:1343   */\n  tag_31\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_32:\n    /* \"#utility.yul\":1473:1536   */\n  tag_33\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_12:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_35:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_14:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_40:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_41:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_39:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_7:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2956:3053   */\n  tag_48\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_49\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_43)\n    /* \"#utility.yul\":3145:3794   */\ntag_51:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_55:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\ntag_16:\n    /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":628:17017  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":628:17017  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3947:4114  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1743:1775   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1725:1776   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1713:1715   */\n      0x20\n        /* \"#utility.yul\":1698:1716   */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3947:4114  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1579:1782   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3468:3886  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4624:4920  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4986:5135  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2986:3011   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2974:2976   */\n      0x20\n        /* \"#utility.yul\":2959:2977   */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2840:3017   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4181:4334  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5201:5477  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4400:4562  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4545  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4497:4501  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4545  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4538  _operatorApprovals */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4545  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4555  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4400:4562  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3947:4114  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4023:4030  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4042:4065  _requireMinted(tokenId) */\n      tag_88\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4057:4064  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4042:4056  _requireMinted */\n      tag_89\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4042:4065  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4083:4107  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4083:4098  _tokenApprovals */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4083:4107  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3947:4114  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3468:3886  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5570:5572   */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5552:5573   */\n      mstore\n        /* \"#utility.yul\":5609:5611   */\n      0x21\n        /* \"#utility.yul\":5589:5607   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5582:5612   */\n      mstore\n        /* \"#utility.yul\":5648:5682   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5628:5646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5621:5683   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5699:5717   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5692:5723   */\n      mstore\n        /* \"#utility.yul\":5740:5759   */\n      0x84\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3858:3879  _approve(to, tokenId) */\n      tag_95\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3867:3869  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3871:3878  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3858:3866  _approve */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3858:3879  _approve(to, tokenId) */\n      jump\t// in\n    tag_95:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3538:3886  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3468:3886  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4624:4920  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4783:4824  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_98\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4816:4823  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4783:4801  _isApprovedOrOwner */\n      tag_101\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4783:4824  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_98:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4775:4874  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_104\n      jump\t// in\n    tag_102:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4885:4913  _transfer(from, to, tokenId) */\n      tag_95\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4895:4899  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4901:4903  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4905:4912  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4885:4894  _transfer */\n      tag_106\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4885:4913  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4986:5135  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5089:5128  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_95\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5106:5110  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5112:5114  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5116:5123  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5089:5128  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5089:5105  safeTransferFrom */\n      tag_65\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5089:5128  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6806:6822  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6806:6813  _owners */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6806:6822  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6386:6388   */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6368:6389   */\n      mstore\n        /* \"#utility.yul\":6425:6427   */\n      0x18\n        /* \"#utility.yul\":6405:6423   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6398:6428   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6444:6462   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6437:6491   */\n      mstore\n        /* \"#utility.yul\":6508:6526   */\n      0x64\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6184:6532   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6739:6741   */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6721:6742   */\n      mstore\n        /* \"#utility.yul\":6778:6780   */\n      0x29\n        /* \"#utility.yul\":6758:6776   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6751:6781   */\n      mstore\n        /* \"#utility.yul\":6817:6851   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":6797:6815   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6790:6852   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":6868:6886   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6861:6900   */\n      mstore\n        /* \"#utility.yul\":6917:6936   */\n      0x84\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6537:6942   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_116:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4181:4334  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4275:4327  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_126\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4308:4316  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4318:4326  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4275:4293  _setApprovalForAll */\n      tag_128\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4275:4327  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_126:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4181:4334  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5201:5477  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_65:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5331:5372  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_130\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5364:5371  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5331:5349  _isApprovedOrOwner */\n      tag_101\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5331:5372  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_130:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5323:5422  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_104\n      jump\t// in\n    tag_132:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5432:5470  _safeTransfer(from, to, tokenId, data) */\n      tag_134\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5446:5450  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5452:5454  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5456:5463  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5465:5469  data */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5432:5445  _safeTransfer */\n      tag_135\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5432:5470  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_134:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":5201:5477  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_137\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_137:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_138\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_138:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_140\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_141)\n    tag_140:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_142\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_143\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_142:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_141:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13252:13385  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7197:7201  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6806:6822  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6806:6813  _owners */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6806:6822  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13325:13378  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6386:6388   */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13325:13378  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6368:6389   */\n      mstore\n        /* \"#utility.yul\":6425:6427   */\n      0x18\n        /* \"#utility.yul\":6405:6423   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6398:6428   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6444:6462   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6437:6491   */\n      mstore\n        /* \"#utility.yul\":6508:6526   */\n      0x64\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13325:13378  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6184:6532   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13325:13378  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_151:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13252:13385  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12584:12755  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_96:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12658:12682  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12658:12673  _tokenApprovals */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12658:12682  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12658:12687  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12658:12682  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12711:12734  ERC721.ownerOf(tokenId) */\n      tag_154\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12658:12682  _tokenApprovals[tokenId] */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12711:12725  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12711:12734  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12702:12748  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12584:12755  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7416:7677  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7509:7513  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7525:7538  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7541:7564  ERC721.ownerOf(tokenId) */\n      tag_157\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7556:7563  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7541:7555  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7541:7564  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_157:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7525:7564  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7593:7598  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7582:7598  spender == owner */\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7582:7589  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7582:7598  spender == owner */\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7582:7634  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_159\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4545  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4497:4501  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4545  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4538  _operatorApprovals */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4545  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":4520:4555  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7602:7634  isApprovedForAll(owner, spender) */\n    tag_159:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7582:7669  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_160\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7662:7669  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7638:7669  getApproved(tokenId) == spender */\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7638:7658  getApproved(tokenId) */\n      tag_161\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7650:7657  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7638:7649  getApproved */\n      tag_31\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7638:7658  getApproved(tokenId) */\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7638:7669  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7582:7669  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_160:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7574:7670  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":7416:7677  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11269:12472  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_106:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11393:11397  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11366:11397  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11366:11389  ERC721.ownerOf(tokenId) */\n      tag_163\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11381:11388  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11366:11380  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11366:11389  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11366:11397  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11358:11439  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_166\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11457:11473  to != address(0) */\n      dup3\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11449:11514  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8056:8058   */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11449:11514  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8038:8059   */\n      mstore\n        /* \"#utility.yul\":8095:8097   */\n      0x24\n        /* \"#utility.yul\":8075:8093   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8068:8098   */\n      mstore\n        /* \"#utility.yul\":8134:8168   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8114:8132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8107:8169   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8185:8203   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8178:8212   */\n      mstore\n        /* \"#utility.yul\":8229:8248   */\n      0x84\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11449:11514  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":7854:8254   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11449:11514  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_167:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11694:11698  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11667:11698  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11667:11690  ERC721.ownerOf(tokenId) */\n      tag_172\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11682:11689  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11667:11681  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11667:11690  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11667:11698  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11659:11740  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_166\n      jump\t// in\n    tag_173:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11809:11833  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11809:11824  _tokenApprovals */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11809:11833  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11802:11833  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12277:12292  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12277:12286  _balances */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12277:12292  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12277:12297  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12311:12324  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12311:12329  _balances[to] += 1 */\n      dup1\n      sload\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11802:11833  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12311:12329  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12349:12365  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12349:12356  _owners */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12349:12365  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12349:12370  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12386:12413  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":11825:11832  tokenId */\n      dup5\n      swap4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12386:12413  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3538:3886  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":3468:3886  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12891:13168  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_128:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13011:13019  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13002:13019  owner != operator */\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13002:13007  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13002:13019  owner != operator */\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12994:13049  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8461:8463   */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12994:13049  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8443:8464   */\n      mstore\n        /* \"#utility.yul\":8500:8502   */\n      0x19\n        /* \"#utility.yul\":8480:8498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8473:8503   */\n      mstore\n        /* \"#utility.yul\":8539:8566   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8519:8537   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8512:8567   */\n      mstore\n        /* \"#utility.yul\":8584:8602   */\n      0x64\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12994:13049  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8259:8608   */\n      jump\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12994:13049  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13059:13084  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13059:13077  _operatorApprovals */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13059:13084  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13059:13094  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13059:13105  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13120:13161  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13120:13161  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13120:13161  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":12891:13168  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6338:6605  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_135:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6450:6478  _transfer(from, to, tokenId) */\n      tag_184\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6460:6464  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6466:6468  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6470:6477  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6450:6459  _transfer */\n      tag_106\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6450:6478  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_184:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6496:6543  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_185\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6519:6523  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6525:6527  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6529:6536  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6538:6542  data */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6496:6518  _checkOnERC721Received */\n      tag_186\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6496:6543  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_185:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":6488:6598  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_189\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_143:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_192\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":580:585  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":569:579  Math.log10 */\n      tag_193\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_192:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_195\n      jumpi\n      tag_195\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_197:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_198:\n      not(0x00)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":851:856  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":974:988  mod(value, 10) */\n      dup7\n      mod\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":851:856  ptr-- */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_198\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":1120:1126  buffer */\n      swap4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13937:14768  function _checkOnERC721Received(... */\n    tag_186:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14086:14090  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14106:14119  to.isContract */\n      dup5\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14102:14762  if (to.isContract()) {... */\n      tag_211\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14141:14212  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14141:14177  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14141:14212  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_213\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14192:14196  from */\n      dup10\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14198:14205  tokenId */\n      dup9\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14207:14211  data */\n      dup9\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14141:14212  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_214\n      jump\t// in\n    tag_213:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_215\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_216\n      swap2\n      dup2\n      add\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x01\n    tag_215:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14137:14710  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_218\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_223\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_222)\n    tag_223:\n      0x60\n      swap2\n      pop\n    tag_222:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14379:14385  reason */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14379:14392  reason.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14396:14397  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14379:14397  reason.length == 0 */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14375:14696  if (reason.length == 0) {... */\n      tag_224\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14421:14481  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_189\n      jump\t// in\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14375:14696  if (reason.length == 0) {... */\n    tag_224:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14648:14654  reason */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14642:14655  mload(reason) */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14633:14639  reason */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14629:14631  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14625:14640  add(32, reason) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14618:14656  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14137:14710  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14262:14313  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14255:14313  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_160)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14102:14762  if (to.isContract()) {... */\n    tag_211:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":14747:14751  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":13937:14768  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_193:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_230\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10339:10351  result += 64 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_230:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_233\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10455:10467  result += 32 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_233:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_236\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10571:10583  result += 16 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_236:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_239\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10685:10696  result += 8 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_239:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_242\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10798:10809  result += 4 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_242:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_245\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10911:10922  result += 2 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_245:\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_78\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10990:11001  result += 1 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":11042:11048  result */\n      swap3\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_250:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_258:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_141\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_250\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_251:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_262:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_262)\n    tag_264:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_252:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_266\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_251\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_141\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":1348:1574   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_270:\n      pop\n        /* \"#utility.yul\":1521:1544   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1574   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1787:1960   */\n    tag_253:\n        /* \"#utility.yul\":1855:1875   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1904:1935   */\n      dup2\n      and\n        /* \"#utility.yul\":1894:1936   */\n      dup2\n      eq\n        /* \"#utility.yul\":1884:1954   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1950:1951   */\n      0x00\n        /* \"#utility.yul\":1947:1948   */\n      dup1\n        /* \"#utility.yul\":1940:1952   */\n      revert\n        /* \"#utility.yul\":1884:1954   */\n    tag_273:\n        /* \"#utility.yul\":1787:1960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1965:2265   */\n    tag_36:\n        /* \"#utility.yul\":2033:2039   */\n      0x00\n        /* \"#utility.yul\":2041:2047   */\n      dup1\n        /* \"#utility.yul\":2094:2096   */\n      0x40\n        /* \"#utility.yul\":2082:2091   */\n      dup4\n        /* \"#utility.yul\":2073:2080   */\n      dup6\n        /* \"#utility.yul\":2069:2092   */\n      sub\n        /* \"#utility.yul\":2065:2097   */\n      slt\n        /* \"#utility.yul\":2062:2114   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2110:2111   */\n      0x00\n        /* \"#utility.yul\":2107:2108   */\n      dup1\n        /* \"#utility.yul\":2100:2112   */\n      revert\n        /* \"#utility.yul\":2062:2114   */\n    tag_275:\n        /* \"#utility.yul\":2133:2162   */\n      tag_276\n        /* \"#utility.yul\":2152:2161   */\n      dup4\n        /* \"#utility.yul\":2133:2162   */\n      tag_253\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2123:2162   */\n      swap5\n        /* \"#utility.yul\":2231:2233   */\n      0x20\n        /* \"#utility.yul\":2216:2234   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2203:2235   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1965:2265   */\n      jump\t// out\n        /* \"#utility.yul\":2270:2644   */\n    tag_40:\n        /* \"#utility.yul\":2347:2353   */\n      0x00\n        /* \"#utility.yul\":2355:2361   */\n      dup1\n        /* \"#utility.yul\":2363:2369   */\n      0x00\n        /* \"#utility.yul\":2416:2418   */\n      0x60\n        /* \"#utility.yul\":2404:2413   */\n      dup5\n        /* \"#utility.yul\":2395:2402   */\n      dup7\n        /* \"#utility.yul\":2391:2414   */\n      sub\n        /* \"#utility.yul\":2387:2419   */\n      slt\n        /* \"#utility.yul\":2384:2436   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2432:2433   */\n      0x00\n        /* \"#utility.yul\":2429:2430   */\n      dup1\n        /* \"#utility.yul\":2422:2434   */\n      revert\n        /* \"#utility.yul\":2384:2436   */\n    tag_278:\n        /* \"#utility.yul\":2455:2484   */\n      tag_279\n        /* \"#utility.yul\":2474:2483   */\n      dup5\n        /* \"#utility.yul\":2455:2484   */\n      tag_253\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2445:2484   */\n      swap3\n      pop\n        /* \"#utility.yul\":2503:2541   */\n      tag_280\n        /* \"#utility.yul\":2537:2539   */\n      0x20\n        /* \"#utility.yul\":2526:2535   */\n      dup6\n        /* \"#utility.yul\":2522:2540   */\n      add\n        /* \"#utility.yul\":2503:2541   */\n      tag_253\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2270:2644   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2493:2541   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2610:2612   */\n      0x40\n        /* \"#utility.yul\":2595:2613   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2582:2614   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2270:2644   */\n      jump\t// out\n        /* \"#utility.yul\":2649:2835   */\n    tag_51:\n        /* \"#utility.yul\":2708:2714   */\n      0x00\n        /* \"#utility.yul\":2761:2763   */\n      0x20\n        /* \"#utility.yul\":2749:2758   */\n      dup3\n        /* \"#utility.yul\":2740:2747   */\n      dup5\n        /* \"#utility.yul\":2736:2759   */\n      sub\n        /* \"#utility.yul\":2732:2764   */\n      slt\n        /* \"#utility.yul\":2729:2781   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2777:2778   */\n      0x00\n        /* \"#utility.yul\":2774:2775   */\n      dup1\n        /* \"#utility.yul\":2767:2779   */\n      revert\n        /* \"#utility.yul\":2729:2781   */\n    tag_282:\n        /* \"#utility.yul\":2800:2829   */\n      tag_141\n        /* \"#utility.yul\":2819:2828   */\n      dup3\n        /* \"#utility.yul\":2800:2829   */\n      tag_253\n      jump\t// in\n        /* \"#utility.yul\":3022:3369   */\n    tag_60:\n        /* \"#utility.yul\":3087:3093   */\n      0x00\n        /* \"#utility.yul\":3095:3101   */\n      dup1\n        /* \"#utility.yul\":3148:3150   */\n      0x40\n        /* \"#utility.yul\":3136:3145   */\n      dup4\n        /* \"#utility.yul\":3127:3134   */\n      dup6\n        /* \"#utility.yul\":3123:3146   */\n      sub\n        /* \"#utility.yul\":3119:3151   */\n      slt\n        /* \"#utility.yul\":3116:3168   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3164:3165   */\n      0x00\n        /* \"#utility.yul\":3161:3162   */\n      dup1\n        /* \"#utility.yul\":3154:3166   */\n      revert\n        /* \"#utility.yul\":3116:3168   */\n    tag_286:\n        /* \"#utility.yul\":3187:3216   */\n      tag_287\n        /* \"#utility.yul\":3206:3215   */\n      dup4\n        /* \"#utility.yul\":3187:3216   */\n      tag_253\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3177:3216   */\n      swap2\n      pop\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup4\n        /* \"#utility.yul\":3251:3269   */\n      add\n        /* \"#utility.yul\":3238:3270   */\n      calldataload\n        /* \"#utility.yul\":3313:3318   */\n      dup1\n        /* \"#utility.yul\":3306:3319   */\n      iszero\n        /* \"#utility.yul\":3299:3320   */\n      iszero\n        /* \"#utility.yul\":3292:3297   */\n      dup2\n        /* \"#utility.yul\":3289:3321   */\n      eq\n        /* \"#utility.yul\":3279:3339   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3335:3336   */\n      0x00\n        /* \"#utility.yul\":3332:3333   */\n      dup1\n        /* \"#utility.yul\":3325:3337   */\n      revert\n        /* \"#utility.yul\":3279:3339   */\n    tag_288:\n        /* \"#utility.yul\":3358:3363   */\n      dup1\n        /* \"#utility.yul\":3348:3363   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3022:3369   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3374:3501   */\n    tag_196:\n        /* \"#utility.yul\":3435:3445   */\n      0x4e487b71\n        /* \"#utility.yul\":3430:3433   */\n      0xe0\n        /* \"#utility.yul\":3426:3446   */\n      shl\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3416:3447   */\n      mstore\n        /* \"#utility.yul\":3466:3470   */\n      0x41\n        /* \"#utility.yul\":3463:3464   */\n      0x04\n        /* \"#utility.yul\":3456:3471   */\n      mstore\n        /* \"#utility.yul\":3490:3494   */\n      0x24\n        /* \"#utility.yul\":3487:3488   */\n      0x00\n        /* \"#utility.yul\":3480:3495   */\n      revert\n        /* \"#utility.yul\":3506:4713   */\n    tag_64:\n        /* \"#utility.yul\":3601:3607   */\n      0x00\n        /* \"#utility.yul\":3609:3615   */\n      dup1\n        /* \"#utility.yul\":3617:3623   */\n      0x00\n        /* \"#utility.yul\":3625:3631   */\n      dup1\n        /* \"#utility.yul\":3678:3681   */\n      0x80\n        /* \"#utility.yul\":3666:3675   */\n      dup6\n        /* \"#utility.yul\":3657:3664   */\n      dup8\n        /* \"#utility.yul\":3653:3676   */\n      sub\n        /* \"#utility.yul\":3649:3682   */\n      slt\n        /* \"#utility.yul\":3646:3699   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3692:3693   */\n      dup1\n        /* \"#utility.yul\":3685:3697   */\n      revert\n        /* \"#utility.yul\":3646:3699   */\n    tag_291:\n        /* \"#utility.yul\":3718:3747   */\n      tag_292\n        /* \"#utility.yul\":3737:3746   */\n      dup6\n        /* \"#utility.yul\":3718:3747   */\n      tag_253\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3708:3747   */\n      swap4\n      pop\n        /* \"#utility.yul\":3766:3804   */\n      tag_293\n        /* \"#utility.yul\":3800:3802   */\n      0x20\n        /* \"#utility.yul\":3789:3798   */\n      dup7\n        /* \"#utility.yul\":3785:3803   */\n      add\n        /* \"#utility.yul\":3766:3804   */\n      tag_253\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3756:3804   */\n      swap3\n      pop\n        /* \"#utility.yul\":3873:3875   */\n      0x40\n        /* \"#utility.yul\":3858:3876   */\n      dup6\n      add\n        /* \"#utility.yul\":3845:3877   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3952:3954   */\n      0x60\n        /* \"#utility.yul\":3937:3955   */\n      dup6\n      add\n        /* \"#utility.yul\":3924:3956   */\n      calldataload\n        /* \"#utility.yul\":3979:3997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3968:3998   */\n      dup2\n      gt\n        /* \"#utility.yul\":3965:4015   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4011:4012   */\n      0x00\n        /* \"#utility.yul\":4008:4009   */\n      dup1\n        /* \"#utility.yul\":4001:4013   */\n      revert\n        /* \"#utility.yul\":3965:4015   */\n    tag_294:\n        /* \"#utility.yul\":4034:4056   */\n      dup6\n      add\n        /* \"#utility.yul\":4087:4091   */\n      0x1f\n        /* \"#utility.yul\":4079:4092   */\n      dup2\n      add\n        /* \"#utility.yul\":4075:4102   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4065:4120   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4113:4114   */\n      dup1\n        /* \"#utility.yul\":4106:4118   */\n      revert\n        /* \"#utility.yul\":4065:4120   */\n    tag_295:\n        /* \"#utility.yul\":4156:4158   */\n      dup1\n        /* \"#utility.yul\":4143:4159   */\n      calldataload\n        /* \"#utility.yul\":4182:4200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4174:4180   */\n      dup2\n        /* \"#utility.yul\":4171:4201   */\n      gt\n        /* \"#utility.yul\":4168:4224   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4204:4222   */\n      tag_297\n      tag_196\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4253:4255   */\n      0x40\n        /* \"#utility.yul\":4247:4256   */\n      mload\n        /* \"#utility.yul\":4345:4347   */\n      0x1f\n        /* \"#utility.yul\":4307:4324   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4303:4334   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4336:4338   */\n      0x3f\n        /* \"#utility.yul\":4299:4339   */\n      add\n        /* \"#utility.yul\":4295:4349   */\n      and\n        /* \"#utility.yul\":4283:4350   */\n      dup2\n      add\n        /* \"#utility.yul\":4380:4398   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4365:4399   */\n      dup2\n      gt\n        /* \"#utility.yul\":4401:4423   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4362:4424   */\n      or\n        /* \"#utility.yul\":4359:4447   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4427:4445   */\n      tag_299\n      tag_196\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4463:4465   */\n      0x40\n        /* \"#utility.yul\":4456:4478   */\n      mstore\n        /* \"#utility.yul\":4487:4509   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4528:4543   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4545:4547   */\n      0x20\n        /* \"#utility.yul\":4524:4548   */\n      add\n        /* \"#utility.yul\":4521:4558   */\n      dup10\n      lt\n        /* \"#utility.yul\":4518:4575   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":4571:4572   */\n      0x00\n        /* \"#utility.yul\":4568:4569   */\n      dup1\n        /* \"#utility.yul\":4561:4573   */\n      revert\n        /* \"#utility.yul\":4518:4575   */\n    tag_300:\n        /* \"#utility.yul\":4627:4633   */\n      dup2\n        /* \"#utility.yul\":4622:4624   */\n      0x20\n        /* \"#utility.yul\":4618:4620   */\n      dup5\n        /* \"#utility.yul\":4614:4625   */\n      add\n        /* \"#utility.yul\":4609:4611   */\n      0x20\n        /* \"#utility.yul\":4601:4607   */\n      dup4\n        /* \"#utility.yul\":4597:4612   */\n      add\n        /* \"#utility.yul\":4584:4634   */\n      calldatacopy\n        /* \"#utility.yul\":4680:4681   */\n      0x00\n        /* \"#utility.yul\":4675:4677   */\n      0x20\n        /* \"#utility.yul\":4666:4672   */\n      dup4\n        /* \"#utility.yul\":4658:4664   */\n      dup4\n        /* \"#utility.yul\":4654:4673   */\n      add\n        /* \"#utility.yul\":4650:4678   */\n      add\n        /* \"#utility.yul\":4643:4682   */\n      mstore\n        /* \"#utility.yul\":4701:4707   */\n      dup1\n        /* \"#utility.yul\":4691:4707   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3506:4713   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4718:4978   */\n    tag_72:\n        /* \"#utility.yul\":4786:4792   */\n      0x00\n        /* \"#utility.yul\":4794:4800   */\n      dup1\n        /* \"#utility.yul\":4847:4849   */\n      0x40\n        /* \"#utility.yul\":4835:4844   */\n      dup4\n        /* \"#utility.yul\":4826:4833   */\n      dup6\n        /* \"#utility.yul\":4822:4845   */\n      sub\n        /* \"#utility.yul\":4818:4850   */\n      slt\n        /* \"#utility.yul\":4815:4867   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4863:4864   */\n      0x00\n        /* \"#utility.yul\":4860:4861   */\n      dup1\n        /* \"#utility.yul\":4853:4865   */\n      revert\n        /* \"#utility.yul\":4815:4867   */\n    tag_302:\n        /* \"#utility.yul\":4886:4915   */\n      tag_303\n        /* \"#utility.yul\":4905:4914   */\n      dup4\n        /* \"#utility.yul\":4886:4915   */\n      tag_253\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4876:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4934:4972   */\n      tag_304\n        /* \"#utility.yul\":4968:4970   */\n      0x20\n        /* \"#utility.yul\":4957:4966   */\n      dup5\n        /* \"#utility.yul\":4953:4971   */\n      add\n        /* \"#utility.yul\":4934:4972   */\n      tag_253\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4924:4972   */\n      swap1\n      pop\n        /* \"#utility.yul\":4718:4978   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4983:5363   */\n    tag_82:\n        /* \"#utility.yul\":5062:5063   */\n      0x01\n        /* \"#utility.yul\":5058:5070   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5105:5117   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5126:5187   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":5180:5184   */\n      0x7f\n        /* \"#utility.yul\":5172:5178   */\n      dup3\n        /* \"#utility.yul\":5168:5185   */\n      and\n        /* \"#utility.yul\":5158:5185   */\n      swap2\n      pop\n        /* \"#utility.yul\":5126:5187   */\n    tag_306:\n        /* \"#utility.yul\":5233:5235   */\n      0x20\n        /* \"#utility.yul\":5225:5231   */\n      dup3\n        /* \"#utility.yul\":5222:5236   */\n      lt\n        /* \"#utility.yul\":5202:5220   */\n      dup2\n        /* \"#utility.yul\":5199:5237   */\n      sub\n        /* \"#utility.yul\":5196:5357   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5279:5289   */\n      0x4e487b71\n        /* \"#utility.yul\":5274:5277   */\n      0xe0\n        /* \"#utility.yul\":5270:5290   */\n      shl\n        /* \"#utility.yul\":5267:5268   */\n      0x00\n        /* \"#utility.yul\":5260:5291   */\n      mstore\n        /* \"#utility.yul\":5314:5318   */\n      0x22\n        /* \"#utility.yul\":5311:5312   */\n      0x04\n        /* \"#utility.yul\":5304:5319   */\n      mstore\n        /* \"#utility.yul\":5342:5346   */\n      0x24\n        /* \"#utility.yul\":5339:5340   */\n      0x00\n        /* \"#utility.yul\":5332:5347   */\n      revert\n        /* \"#utility.yul\":5196:5357   */\n    tag_307:\n      pop\n        /* \"#utility.yul\":4983:5363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6179   */\n    tag_104:\n        /* \"#utility.yul\":5972:5974   */\n      0x20\n        /* \"#utility.yul\":5954:5975   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6011:6013   */\n      0x2d\n        /* \"#utility.yul\":5991:6009   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5984:6014   */\n      mstore\n        /* \"#utility.yul\":6050:6084   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6045:6047   */\n      0x40\n        /* \"#utility.yul\":6030:6048   */\n      dup3\n      add\n        /* \"#utility.yul\":6023:6085   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6116:6118   */\n      0x60\n        /* \"#utility.yul\":6101:6119   */\n      dup3\n      add\n        /* \"#utility.yul\":6094:6137   */\n      mstore\n        /* \"#utility.yul\":6169:6172   */\n      0x80\n        /* \"#utility.yul\":6154:6173   */\n      add\n      swap1\n        /* \"#utility.yul\":5770:6179   */\n      jump\t// out\n        /* \"#utility.yul\":6947:7443   */\n    tag_145:\n        /* \"#utility.yul\":7126:7129   */\n      0x00\n        /* \"#utility.yul\":7164:7170   */\n      dup4\n        /* \"#utility.yul\":7158:7171   */\n      mload\n        /* \"#utility.yul\":7180:7246   */\n      tag_313\n        /* \"#utility.yul\":7239:7245   */\n      dup2\n        /* \"#utility.yul\":7234:7237   */\n      dup5\n        /* \"#utility.yul\":7227:7231   */\n      0x20\n        /* \"#utility.yul\":7219:7225   */\n      dup9\n        /* \"#utility.yul\":7215:7232   */\n      add\n        /* \"#utility.yul\":7180:7246   */\n      tag_251\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7309:7322   */\n      dup4\n      mload\n        /* \"#utility.yul\":7268:7284   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7331:7401   */\n      tag_314\n        /* \"#utility.yul\":7309:7322   */\n      dup2\n        /* \"#utility.yul\":7268:7284   */\n      dup4\n        /* \"#utility.yul\":7378:7382   */\n      0x20\n        /* \"#utility.yul\":7366:7383   */\n      dup9\n      add\n        /* \"#utility.yul\":7331:7401   */\n      tag_251\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7417:7437   */\n      add\n      swap5\n        /* \"#utility.yul\":6947:7443   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7448:7849   */\n    tag_166:\n        /* \"#utility.yul\":7650:7652   */\n      0x20\n        /* \"#utility.yul\":7632:7653   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7689:7691   */\n      0x25\n        /* \"#utility.yul\":7669:7687   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7662:7692   */\n      mstore\n        /* \"#utility.yul\":7728:7762   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7723:7725   */\n      0x40\n        /* \"#utility.yul\":7708:7726   */\n      dup3\n      add\n        /* \"#utility.yul\":7701:7763   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":7794:7796   */\n      0x60\n        /* \"#utility.yul\":7779:7797   */\n      dup3\n      add\n        /* \"#utility.yul\":7772:7807   */\n      mstore\n        /* \"#utility.yul\":7839:7842   */\n      0x80\n        /* \"#utility.yul\":7824:7843   */\n      add\n      swap1\n        /* \"#utility.yul\":7448:7849   */\n      jump\t// out\n        /* \"#utility.yul\":8613:9027   */\n    tag_189:\n        /* \"#utility.yul\":8815:8817   */\n      0x20\n        /* \"#utility.yul\":8797:8818   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8854:8856   */\n      0x32\n        /* \"#utility.yul\":8834:8852   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8827:8857   */\n      mstore\n        /* \"#utility.yul\":8893:8927   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":8888:8890   */\n      0x40\n        /* \"#utility.yul\":8873:8891   */\n      dup3\n      add\n        /* \"#utility.yul\":8866:8928   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":8959:8961   */\n      0x60\n        /* \"#utility.yul\":8944:8962   */\n      dup3\n      add\n        /* \"#utility.yul\":8937:8985   */\n      mstore\n        /* \"#utility.yul\":9017:9020   */\n      0x80\n        /* \"#utility.yul\":9002:9021   */\n      add\n      swap1\n        /* \"#utility.yul\":8613:9027   */\n      jump\t// out\n        /* \"#utility.yul\":9164:9649   */\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9395:9427   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9377:9428   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9464:9496   */\n      dup5\n      and\n        /* \"#utility.yul\":9459:9461   */\n      0x20\n        /* \"#utility.yul\":9444:9462   */\n      dup3\n      add\n        /* \"#utility.yul\":9437:9497   */\n      mstore\n        /* \"#utility.yul\":9528:9530   */\n      0x40\n        /* \"#utility.yul\":9513:9531   */\n      dup2\n      add\n        /* \"#utility.yul\":9506:9540   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9576:9579   */\n      0x80\n        /* \"#utility.yul\":9571:9573   */\n      0x60\n        /* \"#utility.yul\":9556:9574   */\n      dup3\n      add\n        /* \"#utility.yul\":9549:9580   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":9597:9643   */\n      tag_321\n      swap1\n        /* \"#utility.yul\":9623:9642   */\n      dup4\n      add\n        /* \"#utility.yul\":9615:9621   */\n      dup5\n        /* \"#utility.yul\":9597:9643   */\n      tag_252\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9589:9643   */\n      swap7\n        /* \"#utility.yul\":9164:9649   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9654:9903   */\n    tag_217:\n        /* \"#utility.yul\":9723:9729   */\n      0x00\n        /* \"#utility.yul\":9776:9778   */\n      0x20\n        /* \"#utility.yul\":9764:9773   */\n      dup3\n        /* \"#utility.yul\":9755:9762   */\n      dup5\n        /* \"#utility.yul\":9751:9774   */\n      sub\n        /* \"#utility.yul\":9747:9779   */\n      slt\n        /* \"#utility.yul\":9744:9796   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":9792:9793   */\n      0x00\n        /* \"#utility.yul\":9789:9790   */\n      dup1\n        /* \"#utility.yul\":9782:9794   */\n      revert\n        /* \"#utility.yul\":9744:9796   */\n    tag_323:\n        /* \"#utility.yul\":9824:9833   */\n      dup2\n        /* \"#utility.yul\":9818:9834   */\n      mload\n        /* \"#utility.yul\":9843:9873   */\n      tag_141\n        /* \"#utility.yul\":9867:9872   */\n      dup2\n        /* \"#utility.yul\":9843:9873   */\n      tag_250\n      jump\t// in\n\n    auxdata: 0xa264697066735822122095a36a7c52b73e456315bb2081777fbd6b3798aedcfc83fb9082ced600d11fe964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 80,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4053:11",
										"nodeType": "YulBlock",
										"src": "0:4053:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:11",
													"nodeType": "YulBlock",
													"src": "46:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:11",
																		"nodeType": "YulLiteral",
																		"src": "63:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:11",
																				"nodeType": "YulLiteral",
																				"src": "70:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:11",
																				"nodeType": "YulLiteral",
																				"src": "75:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:11"
																		},
																		"nativeSrc": "66:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:11"
																},
																"nativeSrc": "56:31:11",
																"nodeType": "YulFunctionCall",
																"src": "56:31:11"
															},
															"nativeSrc": "56:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:11",
																		"nodeType": "YulLiteral",
																		"src": "103:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:11",
																		"nodeType": "YulLiteral",
																		"src": "106:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:11"
																},
																"nativeSrc": "96:15:11",
																"nodeType": "YulFunctionCall",
																"src": "96:15:11"
															},
															"nativeSrc": "96:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:11",
																		"nodeType": "YulLiteral",
																		"src": "127:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:11",
																		"nodeType": "YulLiteral",
																		"src": "130:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:11"
																},
																"nativeSrc": "120:15:11",
																"nodeType": "YulFunctionCall",
																"src": "120:15:11"
															},
															"nativeSrc": "120:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:11"
											},
											{
												"body": {
													"nativeSrc": "210:770:11",
													"nodeType": "YulBlock",
													"src": "210:770:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:11",
																"nodeType": "YulBlock",
																"src": "259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:11"
																			},
																			"nativeSrc": "261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:11"
																		},
																		"nativeSrc": "261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:11",
																						"nodeType": "YulLiteral",
																						"src": "246:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:11"
																				},
																				"nativeSrc": "234:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:11"
																		},
																		"nativeSrc": "230:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:11"
																},
																"nativeSrc": "223:35:11",
																"nodeType": "YulFunctionCall",
																"src": "223:35:11"
															},
															"nativeSrc": "220:55:11",
															"nodeType": "YulIf",
															"src": "220:55:11"
														},
														{
															"nativeSrc": "284:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:11"
																},
																"nativeSrc": "298:13:11",
																"nodeType": "YulFunctionCall",
																"src": "298:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:11",
																	"nodeType": "YulTypedName",
																	"src": "288:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:11",
																"nodeType": "YulBlock",
																"src": "354:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:11"
																			},
																			"nativeSrc": "356:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:11"
																		},
																		"nativeSrc": "356:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:11",
																						"nodeType": "YulLiteral",
																						"src": "342:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:11",
																						"nodeType": "YulLiteral",
																						"src": "346:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:11"
																				},
																				"nativeSrc": "338:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:11",
																				"nodeType": "YulLiteral",
																				"src": "350:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:11"
																		},
																		"nativeSrc": "334:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:11"
																},
																"nativeSrc": "323:30:11",
																"nodeType": "YulFunctionCall",
																"src": "323:30:11"
															},
															"nativeSrc": "320:56:11",
															"nodeType": "YulIf",
															"src": "320:56:11"
														},
														{
															"nativeSrc": "385:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:11",
																		"nodeType": "YulLiteral",
																		"src": "405:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:11"
																},
																"nativeSrc": "399:9:11",
																"nodeType": "YulFunctionCall",
																"src": "399:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:11",
																	"nodeType": "YulTypedName",
																	"src": "389:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:11",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:11",
																										"nodeType": "YulLiteral",
																										"src": "471:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:11"
																								},
																								"nativeSrc": "459:17:11",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:11",
																										"nodeType": "YulLiteral",
																										"src": "482:2:11",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:11"
																								},
																								"nativeSrc": "478:7:11",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:11"
																						},
																						"nativeSrc": "455:31:11",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:11",
																						"nodeType": "YulLiteral",
																						"src": "488:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:11"
																				},
																				"nativeSrc": "451:40:11",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:11",
																						"nodeType": "YulLiteral",
																						"src": "497:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:11"
																				},
																				"nativeSrc": "493:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:11"
																		},
																		"nativeSrc": "447:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:11"
																},
																"nativeSrc": "435:67:11",
																"nodeType": "YulFunctionCall",
																"src": "435:67:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:11",
																	"nodeType": "YulTypedName",
																	"src": "421:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:11",
																"nodeType": "YulBlock",
																"src": "577:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:11"
																			},
																			"nativeSrc": "579:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:11"
																		},
																		"nativeSrc": "579:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:11",
																								"nodeType": "YulLiteral",
																								"src": "540:2:11",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:11",
																								"nodeType": "YulLiteral",
																								"src": "544:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:11"
																						},
																						"nativeSrc": "536:10:11",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:11",
																						"nodeType": "YulLiteral",
																						"src": "548:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:11"
																				},
																				"nativeSrc": "532:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:11"
																		},
																		"nativeSrc": "517:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:11"
																		},
																		"nativeSrc": "553:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:11"
																},
																"nativeSrc": "514:62:11",
																"nodeType": "YulFunctionCall",
																"src": "514:62:11"
															},
															"nativeSrc": "511:88:11",
															"nodeType": "YulIf",
															"src": "511:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:11",
																		"nodeType": "YulLiteral",
																		"src": "615:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:11"
																},
																"nativeSrc": "608:22:11",
																"nodeType": "YulFunctionCall",
																"src": "608:22:11"
															},
															"nativeSrc": "608:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:11"
																},
																"nativeSrc": "639:22:11",
																"nodeType": "YulFunctionCall",
																"src": "639:22:11"
															},
															"nativeSrc": "639:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:11"
														},
														{
															"body": {
																"nativeSrc": "713:16:11",
																"nodeType": "YulBlock",
																"src": "713:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:11",
																					"nodeType": "YulLiteral",
																					"src": "722:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:11",
																					"nodeType": "YulLiteral",
																					"src": "725:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:11"
																			},
																			"nativeSrc": "715:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:11"
																		},
																		"nativeSrc": "715:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:11"
																				},
																				"nativeSrc": "680:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:11",
																				"nodeType": "YulLiteral",
																				"src": "701:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:11"
																		},
																		"nativeSrc": "676:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:11"
																},
																"nativeSrc": "673:39:11",
																"nodeType": "YulFunctionCall",
																"src": "673:39:11"
															},
															"nativeSrc": "670:59:11",
															"nodeType": "YulIf",
															"src": "670:59:11"
														},
														{
															"nativeSrc": "738:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:11",
																"nodeType": "YulLiteral",
																"src": "747:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:11",
																	"nodeType": "YulTypedName",
																	"src": "742:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:11",
																"nodeType": "YulBlock",
																"src": "809:91:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:11"
																							},
																							"nativeSrc": "834:14:11",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:11",
																							"nodeType": "YulLiteral",
																							"src": "850:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:11"
																					},
																					"nativeSrc": "830:25:11",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:11"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:11",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:11"
																									},
																									"nativeSrc": "867:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:11",
																									"nodeType": "YulLiteral",
																									"src": "883:4:11",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:11"
																							},
																							"nativeSrc": "863:25:11",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:11"
																					},
																					"nativeSrc": "857:32:11",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:11"
																			},
																			"nativeSrc": "823:67:11",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:11"
																		},
																		"nativeSrc": "823:67:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:11"
																},
																"nativeSrc": "765:13:11",
																"nodeType": "YulFunctionCall",
																"src": "765:13:11"
															},
															"nativeSrc": "757:143:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:11",
																"nodeType": "YulBlock",
																"src": "779:21:11",
																"statements": [
																	{
																		"nativeSrc": "781:17:11",
																		"nodeType": "YulAssignment",
																		"src": "781:17:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:11",
																					"nodeType": "YulLiteral",
																					"src": "793:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:11"
																			},
																			"nativeSrc": "786:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:11",
																"nodeType": "YulBlock",
																"src": "761:3:11",
																"statements": []
															},
															"src": "757:143:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:11"
																				},
																				"nativeSrc": "920:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:11",
																				"nodeType": "YulLiteral",
																				"src": "941:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:11"
																		},
																		"nativeSrc": "916:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:11",
																		"nodeType": "YulLiteral",
																		"src": "948:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:11"
																},
																"nativeSrc": "909:41:11",
																"nodeType": "YulFunctionCall",
																"src": "909:41:11"
															},
															"nativeSrc": "909:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:11"
														},
														{
															"nativeSrc": "959:15:11",
															"nodeType": "YulAssignment",
															"src": "959:15:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:11",
																"nodeType": "YulIdentifier",
																"src": "968:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:11",
														"nodeType": "YulTypedName",
														"src": "184:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:11",
														"nodeType": "YulTypedName",
														"src": "192:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:11",
														"nodeType": "YulTypedName",
														"src": "200:5:11",
														"type": ""
													}
												],
												"src": "146:834:11"
											},
											{
												"body": {
													"nativeSrc": "1103:439:11",
													"nodeType": "YulBlock",
													"src": "1103:439:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:11",
																"nodeType": "YulBlock",
																"src": "1149:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:11"
																			},
																			"nativeSrc": "1151:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:11"
																		},
																		"nativeSrc": "1151:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:11"
																		},
																		"nativeSrc": "1120:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:11"
																},
																"nativeSrc": "1116:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:11"
															},
															"nativeSrc": "1113:52:11",
															"nodeType": "YulIf",
															"src": "1113:52:11"
														},
														{
															"nativeSrc": "1174:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:11"
																},
																"nativeSrc": "1188:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:11",
																"nodeType": "YulBlock",
																"src": "1247:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:11"
																			},
																			"nativeSrc": "1249:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:11"
																		},
																		"nativeSrc": "1249:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:11"
																				},
																				"nativeSrc": "1231:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:11"
																		},
																		"nativeSrc": "1227:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:11"
																},
																"nativeSrc": "1216:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:11"
															},
															"nativeSrc": "1213:50:11",
															"nodeType": "YulIf",
															"src": "1213:50:11"
														},
														{
															"nativeSrc": "1272:71:11",
															"nodeType": "YulAssignment",
															"src": "1272:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:11"
																		},
																		"nativeSrc": "1311:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:11"
																},
																"nativeSrc": "1282:61:11",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:11"
																}
															]
														},
														{
															"nativeSrc": "1352:41:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:11"
																		},
																		"nativeSrc": "1374:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:11"
																},
																"nativeSrc": "1368:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:11",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:11",
																"nodeType": "YulBlock",
																"src": "1438:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:11"
																			},
																			"nativeSrc": "1440:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:11"
																		},
																		"nativeSrc": "1440:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:11"
																				},
																				"nativeSrc": "1422:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:11"
																		},
																		"nativeSrc": "1418:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:11"
																},
																"nativeSrc": "1405:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:11"
															},
															"nativeSrc": "1402:52:11",
															"nodeType": "YulIf",
															"src": "1402:52:11"
														},
														{
															"nativeSrc": "1463:73:11",
															"nodeType": "YulAssignment",
															"src": "1463:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:11"
																		},
																		"nativeSrc": "1502:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:11"
																},
																"nativeSrc": "1473:63:11",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:11",
														"nodeType": "YulTypedName",
														"src": "1061:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:11",
														"nodeType": "YulTypedName",
														"src": "1072:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:11",
														"nodeType": "YulTypedName",
														"src": "1084:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:11",
														"nodeType": "YulTypedName",
														"src": "1092:6:11",
														"type": ""
													}
												],
												"src": "985:557:11"
											},
											{
												"body": {
													"nativeSrc": "1602:325:11",
													"nodeType": "YulBlock",
													"src": "1602:325:11",
													"statements": [
														{
															"nativeSrc": "1612:22:11",
															"nodeType": "YulAssignment",
															"src": "1612:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:11"
																},
																"nativeSrc": "1622:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:11"
																}
															]
														},
														{
															"nativeSrc": "1643:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:11"
																},
																"nativeSrc": "1669:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:11",
																"nodeType": "YulBlock",
																"src": "1720:31:11",
																"statements": [
																	{
																		"nativeSrc": "1722:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:11"
																			},
																			"nativeSrc": "1732:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:11"
																},
																"nativeSrc": "1693:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:11"
															},
															"nativeSrc": "1690:61:11",
															"nodeType": "YulIf",
															"src": "1690:61:11"
														},
														{
															"body": {
																"nativeSrc": "1810:111:11",
																"nodeType": "YulBlock",
																"src": "1810:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:11",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:11",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:11"
																					},
																					"nativeSrc": "1834:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:11"
																			},
																			"nativeSrc": "1824:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:11"
																		},
																		"nativeSrc": "1824:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:11"
																			},
																			"nativeSrc": "1868:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:11"
																		},
																		"nativeSrc": "1868:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:11"
																			},
																			"nativeSrc": "1896:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:11"
																		},
																		"nativeSrc": "1896:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:11"
																		},
																		"nativeSrc": "1786:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:11"
																},
																"nativeSrc": "1763:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:11"
															},
															"nativeSrc": "1760:161:11",
															"nodeType": "YulIf",
															"src": "1760:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:11",
														"nodeType": "YulTypedName",
														"src": "1582:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:11",
														"nodeType": "YulTypedName",
														"src": "1591:6:11",
														"type": ""
													}
												],
												"src": "1547:380:11"
											},
											{
												"body": {
													"nativeSrc": "1988:65:11",
													"nodeType": "YulBlock",
													"src": "1988:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:11"
																},
																"nativeSrc": "1998:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:11"
															},
															"nativeSrc": "1998:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:11"
														},
														{
															"nativeSrc": "2021:26:11",
															"nodeType": "YulAssignment",
															"src": "2021:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:11"
																},
																"nativeSrc": "2029:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:11",
														"nodeType": "YulTypedName",
														"src": "1971:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:11",
														"nodeType": "YulTypedName",
														"src": "1979:4:11",
														"type": ""
													}
												],
												"src": "1932:121:11"
											},
											{
												"body": {
													"nativeSrc": "2139:437:11",
													"nodeType": "YulBlock",
													"src": "2139:437:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:11",
																"nodeType": "YulBlock",
																"src": "2172:398:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:11"
																			},
																			"nativeSrc": "2186:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:11"
																		},
																		"nativeSrc": "2186:16:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:11"
																	},
																	{
																		"nativeSrc": "2215:30:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:11"
																			},
																			"nativeSrc": "2227:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:11"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:11",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:11",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:11"
																							},
																							"nativeSrc": "2294:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:11"
																					},
																					"nativeSrc": "2287:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:11"
																			},
																			"nativeSrc": "2277:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:11",
																			"nodeType": "YulBlock",
																			"src": "2352:23:11",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:11",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:11",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:11"
																			},
																			"nativeSrc": "2331:20:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:11"
																		},
																		"nativeSrc": "2328:47:11",
																		"nodeType": "YulIf",
																		"src": "2328:47:11"
																	},
																	{
																		"nativeSrc": "2388:41:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:11",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:11"
																							},
																							"nativeSrc": "2415:12:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:11"
																					},
																					"nativeSrc": "2408:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:11"
																			},
																			"nativeSrc": "2398:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:11"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:11",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:11",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:11"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:11",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:11",
																			"nodeType": "YulBlock",
																			"src": "2540:20:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:11"
																						},
																						"nativeSrc": "2542:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:11"
																					},
																					"nativeSrc": "2542:16:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:11"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:11"
																			},
																			"nativeSrc": "2487:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:11"
																		},
																		"nativeSrc": "2479:81:11",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:11",
																			"nodeType": "YulBlock",
																			"src": "2501:26:11",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:11",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:11"
																						},
																						"nativeSrc": "2512:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:11"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:11"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:11",
																			"nodeType": "YulBlock",
																			"src": "2483:3:11",
																			"statements": []
																		},
																		"src": "2479:81:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:11"
																},
																"nativeSrc": "2152:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:11"
															},
															"nativeSrc": "2149:421:11",
															"nodeType": "YulIf",
															"src": "2149:421:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:11",
														"nodeType": "YulTypedName",
														"src": "2111:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:11",
														"nodeType": "YulTypedName",
														"src": "2118:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:11",
														"nodeType": "YulTypedName",
														"src": "2123:10:11",
														"type": ""
													}
												],
												"src": "2058:518:11"
											},
											{
												"body": {
													"nativeSrc": "2666:81:11",
													"nodeType": "YulBlock",
													"src": "2666:81:11",
													"statements": [
														{
															"nativeSrc": "2676:65:11",
															"nodeType": "YulAssignment",
															"src": "2676:65:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:11",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:11"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:11"
																								},
																								"nativeSrc": "2705:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:11"
																								},
																								"nativeSrc": "2718:6:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:11"
																						},
																						"nativeSrc": "2701:24:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:11"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:11"
																				},
																				"nativeSrc": "2697:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:11"
																		},
																		"nativeSrc": "2687:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:11",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:11"
																		},
																		"nativeSrc": "2729:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:11"
																},
																"nativeSrc": "2684:57:11",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:11",
														"nodeType": "YulTypedName",
														"src": "2643:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:11",
														"nodeType": "YulTypedName",
														"src": "2649:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:11",
														"nodeType": "YulTypedName",
														"src": "2657:4:11",
														"type": ""
													}
												],
												"src": "2581:166:11"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:11",
													"nodeType": "YulBlock",
													"src": "2848:1203:11",
													"statements": [
														{
															"nativeSrc": "2858:24:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:11"
																},
																"nativeSrc": "2872:10:11",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:11",
																"nodeType": "YulBlock",
																"src": "2925:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:11"
																			},
																			"nativeSrc": "2927:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:11"
																		},
																		"nativeSrc": "2927:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:11",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:11"
																				},
																				"nativeSrc": "2909:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:11"
																		},
																		"nativeSrc": "2905:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:11"
																},
																"nativeSrc": "2894:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:11"
															},
															"nativeSrc": "2891:56:11",
															"nodeType": "YulIf",
															"src": "2891:56:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:11"
																				},
																				"nativeSrc": "3032:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:11"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:11"
																		},
																		"nativeSrc": "3006:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:11"
																},
																"nativeSrc": "2956:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:11"
															},
															"nativeSrc": "2956:97:11",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:11"
														},
														{
															"nativeSrc": "3062:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:11",
																"nodeType": "YulLiteral",
																"src": "3079:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:11",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:11",
															"nodeType": "YulAssignment",
															"src": "3089:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:11",
																"nodeType": "YulLiteral",
																"src": "3102:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:11",
																		"nodeType": "YulBlock",
																		"src": "3152:642:11",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:11",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:11"
																							},
																							"nativeSrc": "3193:7:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:11"
																					},
																					"nativeSrc": "3181:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:11",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:11",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:11"
																					},
																					"nativeSrc": "3228:35:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:11",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:11",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:11",
																					"nodeType": "YulBlock",
																					"src": "3356:165:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:11"
																												},
																												"nativeSrc": "3395:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:11"
																										},
																										"nativeSrc": "3389:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:11"
																								},
																								"nativeSrc": "3374:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:11"
																							},
																							"nativeSrc": "3374:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:11"
																						},
																						{
																							"nativeSrc": "3433:24:11",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:11",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:11"
																								},
																								"nativeSrc": "3443:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:11",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:11",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:11"
																								},
																								"nativeSrc": "3487:20:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:11"
																					},
																					"nativeSrc": "3307:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:11"
																				},
																				"nativeSrc": "3299:222:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:11",
																					"nodeType": "YulBlock",
																					"src": "3322:21:11",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:11",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:11",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:11"
																								},
																								"nativeSrc": "3329:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:11",
																					"nodeType": "YulBlock",
																					"src": "3303:3:11",
																					"statements": []
																				},
																				"src": "3299:222:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:11",
																					"nodeType": "YulBlock",
																					"src": "3569:166:11",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:11"
																										},
																										"nativeSrc": "3610:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:11"
																								},
																								"nativeSrc": "3604:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:11",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:11",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:11",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:11",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:11"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:11",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:11"
																																		},
																																		"nativeSrc": "3689:14:11",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:11"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:11",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:11",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:11"
																																},
																																"nativeSrc": "3685:24:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:11"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:11",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:11",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:11"
																																},
																																"nativeSrc": "3711:6:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:11"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:11"
																														},
																														"nativeSrc": "3681:37:11",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:11"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:11"
																												},
																												"nativeSrc": "3677:42:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:11"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:11"
																										},
																										"nativeSrc": "3662:58:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:11"
																								},
																								"nativeSrc": "3647:74:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:11"
																							},
																							"nativeSrc": "3647:74:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:11"
																					},
																					"nativeSrc": "3537:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:11"
																				},
																				"nativeSrc": "3534:201:11",
																				"nodeType": "YulIf",
																				"src": "3534:201:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:11",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:11",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:11"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:11"
																									},
																									"nativeSrc": "3765:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:11",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:11"
																							},
																							"nativeSrc": "3761:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:11"
																					},
																					"nativeSrc": "3748:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:11"
																				},
																				"nativeSrc": "3748:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:11"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:11",
																	"nodeType": "YulCase",
																	"src": "3145:649:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:11",
																		"nodeType": "YulBlock",
																		"src": "3811:234:11",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:11",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:11",
																					"nodeType": "YulBlock",
																					"src": "3874:67:11",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:11",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:11"
																										},
																										"nativeSrc": "3907:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:11"
																								},
																								"nativeSrc": "3901:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:11"
																				},
																				"nativeSrc": "3852:89:11",
																				"nodeType": "YulIf",
																				"src": "3852:89:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:11"
																							},
																							"nativeSrc": "3967:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:11"
																					},
																					"nativeSrc": "3954:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:11"
																				},
																				"nativeSrc": "3954:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:11"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:11",
																	"nodeType": "YulCase",
																	"src": "3803:242:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:11"
																},
																"nativeSrc": "3122:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:11"
															},
															"nativeSrc": "3115:930:11",
															"nodeType": "YulSwitch",
															"src": "3115:930:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:11",
														"nodeType": "YulTypedName",
														"src": "2833:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:11",
														"nodeType": "YulTypedName",
														"src": "2839:3:11",
														"type": ""
													}
												],
												"src": "2752:1299:11"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161133638038061133683398101604081905261002f91610109565b600061003b83826101fb565b50600161004882826101fb565b5050506102b9565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007757600080fd5b81516001600160401b0381111561009057610090610050565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100be576100be610050565b6040528181528382016020018510156100d657600080fd5b60005b828110156100f5576020818601810151838301820152016100d9565b506000918101602001919091529392505050565b6000806040838503121561011c57600080fd5b82516001600160401b0381111561013257600080fd5b61013e85828601610066565b602085015190935090506001600160401b0381111561015c57600080fd5b61016885828601610066565b9150509250929050565b600181811c9082168061018657607f821691505b6020821081036101a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f657806000526020600020601f840160051c810160208510156101d35750805b601f840160051c820191505b818110156101f357600081556001016101df565b50505b505050565b81516001600160401b0381111561021457610214610050565b610228816102228454610172565b846101ac565b6020601f82116001811461025c57600083156102445750848201515b600019600385901b1c1916600184901b1784556101f3565b600084815260208120601f198516915b8281101561028c578785015182556020948501946001909201910161026c565b50848210156102aa5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61106e806102c86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610bf1565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610c5e565b61012461011f366004610c71565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610ca6565b610333565b005b61014f61015f366004610cd0565b6103bf565b61014f610172366004610cd0565b6103f0565b610124610185366004610c71565b61040b565b61019d610198366004610d0d565b61046b565b6040519081526020016100f3565b6101046104f1565b61014f6101c1366004610d28565b610500565b61014f6101d4366004610d7a565b61050f565b6101046101e7366004610c71565b610547565b6100e76101fa366004610e5e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610e91565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610e91565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000610317826105bb565b506000908152600460205260409020546001600160a01b031690565b600061033e8261040b565b9050806001600160a01b0316836001600160a01b0316036103b05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b6103ba838361061d565b505050565b6103c9338261068b565b6103e55760405162461bcd60e51b81526004016103a790610ecb565b6103ba83838361070a565b6103ba8383836040518060200160405280600081525061050f565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b60006001600160a01b0382166104d55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103a7565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610e91565b61050b33838361086e565b5050565b610519338361068b565b6105355760405162461bcd60e51b81526004016103a790610ecb565b6105418484848461093c565b50505050565b6060610552826105bb565b600061056960408051602081019091526000815290565b9050600081511161058957604051806020016040528060008152506105b4565b806105938461096f565b6040516020016105a4929190610f18565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b031661061a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106528261040b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806106978361040b565b9050806001600160a01b0316846001600160a01b031614806106de57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107025750836001600160a01b03166106f78461030c565b6001600160a01b0316145b949350505050565b826001600160a01b031661071d8261040b565b6001600160a01b0316146107435760405162461bcd60e51b81526004016103a790610f47565b6001600160a01b0382166107a55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b826001600160a01b03166107b88261040b565b6001600160a01b0316146107de5760405162461bcd60e51b81526004016103a790610f47565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316036108cf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61094784848461070a565b61095384848484610a02565b6105415760405162461bcd60e51b81526004016103a790610f8c565b6060600061097c83610b03565b600101905060008167ffffffffffffffff81111561099c5761099c610d64565b6040519080825280601f01601f1916602001820160405280156109c6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109d057509392505050565b60006001600160a01b0384163b15610af857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610a46903390899088908890600401610fde565b6020604051808303816000875af1925050508015610a81575060408051601f3d908101601f19168201909252610a7e9181019061101b565b60015b610ade573d808015610aaf576040519150601f19603f3d011682016040523d82523d6000602084013e610ab4565b606091505b508051600003610ad65760405162461bcd60e51b81526004016103a790610f8c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610702565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610b425772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610b6e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b8c57662386f26fc10000830492506010015b6305f5e1008310610ba4576305f5e100830492506008015b6127108310610bb857612710830492506004015b60648310610bca576064830492506002015b600a83106102745760010192915050565b6001600160e01b03198116811461061a57600080fd5b600060208284031215610c0357600080fd5b81356105b481610bdb565b60005b83811015610c29578181015183820152602001610c11565b50506000910152565b60008151808452610c4a816020860160208601610c0e565b601f01601f19169290920160200192915050565b6020815260006105b46020830184610c32565b600060208284031215610c8357600080fd5b5035919050565b80356001600160a01b0381168114610ca157600080fd5b919050565b60008060408385031215610cb957600080fd5b610cc283610c8a565b946020939093013593505050565b600080600060608486031215610ce557600080fd5b610cee84610c8a565b9250610cfc60208501610c8a565b929592945050506040919091013590565b600060208284031215610d1f57600080fd5b6105b482610c8a565b60008060408385031215610d3b57600080fd5b610d4483610c8a565b915060208301358015158114610d5957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610d9057600080fd5b610d9985610c8a565b9350610da760208601610c8a565b925060408501359150606085013567ffffffffffffffff811115610dca57600080fd5b8501601f81018713610ddb57600080fd5b803567ffffffffffffffff811115610df557610df5610d64565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610e2457610e24610d64565b604052818152828201602001891015610e3c57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215610e7157600080fd5b610e7a83610c8a565b9150610e8860208401610c8a565b90509250929050565b600181811c90821680610ea557607f821691505b602082108103610ec557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351610f2a818460208801610c0e565b835190830190610f3e818360208801610c0e565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061101190830184610c32565b9695505050505050565b60006020828403121561102d57600080fd5b81516105b481610bdb56fea264697066735822122095a36a7c52b73e456315bb2081777fbd6b3798aedcfc83fb9082ced600d11fe964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1336 CODESIZE SUB DUP1 PUSH2 0x1336 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B DUP4 DUP3 PUSH2 0x1FB JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x48 DUP3 DUP3 PUSH2 0x1FB JUMP JUMPDEST POP POP POP PUSH2 0x2B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH2 0x90 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xBE JUMPI PUSH2 0xBE PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD9 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x186 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x214 JUMPI PUSH2 0x214 PUSH2 0x50 JUMP JUMPDEST PUSH2 0x228 DUP2 PUSH2 0x222 DUP5 SLOAD PUSH2 0x172 JUMP JUMPDEST DUP5 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x244 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x26C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2AA JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x106E DUP1 PUSH2 0x2C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xE91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xE91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x5BB JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x40B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BA DUP4 DUP4 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3C9 CALLER DUP3 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH2 0x3BA DUP4 DUP4 DUP4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x3BA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x50F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x50B CALLER DUP4 DUP4 PUSH2 0x86E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x519 CALLER DUP4 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH2 0x541 DUP5 DUP5 DUP5 DUP5 PUSH2 0x93C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x552 DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5B4 JUMP JUMPDEST DUP1 PUSH2 0x593 DUP5 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A4 SWAP3 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x652 DUP3 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x697 DUP4 PUSH2 0x40B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x702 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F7 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71D DUP3 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B8 DUP3 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x947 DUP5 DUP5 DUP5 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x953 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x97C DUP4 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99C PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x9D0 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA46 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA81 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA7E SWAP2 DUP2 ADD SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xADE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF8C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x702 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xB42 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xB6E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xB8C JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xBA4 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xBB8 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xBCA JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5B4 DUP2 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC11 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xC4A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCEE DUP5 PUSH2 0xC8A JUMP JUMPDEST SWAP3 POP PUSH2 0xCFC PUSH1 0x20 DUP6 ADD PUSH2 0xC8A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B4 DUP3 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD44 DUP4 PUSH2 0xC8A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD99 DUP6 PUSH2 0xC8A JUMP JUMPDEST SWAP4 POP PUSH2 0xDA7 PUSH1 0x20 DUP7 ADD PUSH2 0xC8A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDF5 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE24 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7A DUP4 PUSH2 0xC8A JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 PUSH1 0x20 DUP5 ADD PUSH2 0xC8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xF2A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC0E JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xF3E DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC0E JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1011 SWAP1 DUP4 ADD DUP5 PUSH2 0xC32 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5B4 DUP2 PUSH2 0xBDB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 LOG3 PUSH11 0x7C52B73E456315BB208177 PUSH32 0xBD6B3798AEDCFC83FB9082CED600D11FE964736F6C634300081A003300000000 ",
							"sourceMap": "628:16389:0:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:0;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16389;;14:127:11;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:11;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:11;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:11;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:11;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:11;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:11:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:11;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:11;-1:-1:-1;;;;;;1405:32:11;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:11;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:11;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:11;;;3901:26;3852:89;-1:-1:-1;;2709:1:11;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:11;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:11;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:11;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:11:o;:::-;628:16389:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_896": {
									"entryPoint": null,
									"id": 896,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_762": {
									"entryPoint": 1565,
									"id": 762,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_870": {
									"entryPoint": 2562,
									"id": 870,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_465": {
									"entryPoint": 1675,
									"id": 465,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1415": {
									"entryPoint": null,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_413": {
									"entryPoint": null,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_808": {
									"entryPoint": 1467,
									"id": 808,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_400": {
									"entryPoint": 2364,
									"id": 400,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_794": {
									"entryPoint": 2158,
									"id": 794,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_738": {
									"entryPoint": 1802,
									"id": 738,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_242": {
									"entryPoint": 819,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_117": {
									"entryPoint": 1131,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_260": {
									"entryPoint": 780,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2393": {
									"entryPoint": 2819,
									"id": 2393,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_155": {
									"entryPoint": 634,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1035,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_341": {
									"entryPoint": 1008,
									"id": 341,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_371": {
									"entryPoint": 1295,
									"id": 371,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_277": {
									"entryPoint": 1280,
									"id": 277,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1677": {
									"entryPoint": null,
									"id": 1677,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 552,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1265,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1484": {
									"entryPoint": 2415,
									"id": 1484,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_204": {
									"entryPoint": 1351,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_322": {
									"entryPoint": 959,
									"id": 322,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9905:11",
										"nodeType": "YulBlock",
										"src": "0:9905:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:11",
													"nodeType": "YulBlock",
													"src": "58:87:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:11",
																"nodeType": "YulBlock",
																"src": "123:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:11",
																					"nodeType": "YulLiteral",
																					"src": "132:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:11",
																					"nodeType": "YulLiteral",
																					"src": "135:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:11"
																			},
																			"nativeSrc": "125:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:11"
																		},
																		"nativeSrc": "125:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:11",
																								"nodeType": "YulLiteral",
																								"src": "103:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:11",
																								"nodeType": "YulLiteral",
																								"src": "108:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:11"
																						},
																						"nativeSrc": "99:20:11",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:11"
																				},
																				"nativeSrc": "88:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:11"
																		},
																		"nativeSrc": "78:43:11",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:11"
																},
																"nativeSrc": "71:51:11",
																"nodeType": "YulFunctionCall",
																"src": "71:51:11"
															},
															"nativeSrc": "68:71:11",
															"nodeType": "YulIf",
															"src": "68:71:11"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:11",
														"nodeType": "YulTypedName",
														"src": "47:5:11",
														"type": ""
													}
												],
												"src": "14:131:11"
											},
											{
												"body": {
													"nativeSrc": "219:176:11",
													"nodeType": "YulBlock",
													"src": "219:176:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:11",
																"nodeType": "YulBlock",
																"src": "265:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:11",
																					"nodeType": "YulLiteral",
																					"src": "274:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:11",
																					"nodeType": "YulLiteral",
																					"src": "277:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:11"
																			},
																			"nativeSrc": "267:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:11"
																		},
																		"nativeSrc": "267:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:11"
																		},
																		"nativeSrc": "236:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:11",
																		"nodeType": "YulLiteral",
																		"src": "261:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:11"
																},
																"nativeSrc": "232:32:11",
																"nodeType": "YulFunctionCall",
																"src": "232:32:11"
															},
															"nativeSrc": "229:52:11",
															"nodeType": "YulIf",
															"src": "229:52:11"
														},
														{
															"nativeSrc": "290:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:11"
																},
																"nativeSrc": "303:23:11",
																"nodeType": "YulFunctionCall",
																"src": "303:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:11",
																	"nodeType": "YulTypedName",
																	"src": "294:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:11"
																},
																"nativeSrc": "335:30:11",
																"nodeType": "YulFunctionCall",
																"src": "335:30:11"
															},
															"nativeSrc": "335:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:11"
														},
														{
															"nativeSrc": "374:15:11",
															"nodeType": "YulAssignment",
															"src": "374:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:11",
																"nodeType": "YulIdentifier",
																"src": "384:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:11",
														"nodeType": "YulTypedName",
														"src": "185:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:11",
														"nodeType": "YulTypedName",
														"src": "196:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:11",
														"nodeType": "YulTypedName",
														"src": "208:6:11",
														"type": ""
													}
												],
												"src": "150:245:11"
											},
											{
												"body": {
													"nativeSrc": "495:92:11",
													"nodeType": "YulBlock",
													"src": "495:92:11",
													"statements": [
														{
															"nativeSrc": "505:26:11",
															"nodeType": "YulAssignment",
															"src": "505:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:11",
																		"nodeType": "YulLiteral",
																		"src": "528:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:11"
																},
																"nativeSrc": "513:18:11",
																"nodeType": "YulFunctionCall",
																"src": "513:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:11"
																				},
																				"nativeSrc": "565:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:11"
																		},
																		"nativeSrc": "558:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:11"
																},
																"nativeSrc": "540:41:11",
																"nodeType": "YulFunctionCall",
																"src": "540:41:11"
															},
															"nativeSrc": "540:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:11",
														"nodeType": "YulTypedName",
														"src": "464:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:11",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:11",
														"nodeType": "YulTypedName",
														"src": "486:4:11",
														"type": ""
													}
												],
												"src": "400:187:11"
											},
											{
												"body": {
													"nativeSrc": "658:184:11",
													"nodeType": "YulBlock",
													"src": "658:184:11",
													"statements": [
														{
															"nativeSrc": "668:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:11",
																"nodeType": "YulLiteral",
																"src": "677:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:11",
																	"nodeType": "YulTypedName",
																	"src": "672:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:11",
																"nodeType": "YulBlock",
																"src": "737:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:11"
																					},
																					"nativeSrc": "758:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:11"
																							},
																							"nativeSrc": "777:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:11"
																					},
																					"nativeSrc": "771:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:11"
																			},
																			"nativeSrc": "751:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:11"
																		},
																		"nativeSrc": "751:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:11"
																},
																"nativeSrc": "695:13:11",
																"nodeType": "YulFunctionCall",
																"src": "695:13:11"
															},
															"nativeSrc": "687:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:11",
																"nodeType": "YulBlock",
																"src": "709:19:11",
																"statements": [
																	{
																		"nativeSrc": "711:15:11",
																		"nodeType": "YulAssignment",
																		"src": "711:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:11",
																					"nodeType": "YulLiteral",
																					"src": "723:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:11"
																			},
																			"nativeSrc": "716:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:11",
																"nodeType": "YulBlock",
																"src": "691:3:11",
																"statements": []
															},
															"src": "687:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:11"
																		},
																		"nativeSrc": "816:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:11",
																		"nodeType": "YulLiteral",
																		"src": "834:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:11"
																},
																"nativeSrc": "809:27:11",
																"nodeType": "YulFunctionCall",
																"src": "809:27:11"
															},
															"nativeSrc": "809:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:11",
														"nodeType": "YulTypedName",
														"src": "636:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:11",
														"nodeType": "YulTypedName",
														"src": "641:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:11",
														"nodeType": "YulTypedName",
														"src": "646:6:11",
														"type": ""
													}
												],
												"src": "592:250:11"
											},
											{
												"body": {
													"nativeSrc": "897:221:11",
													"nodeType": "YulBlock",
													"src": "897:221:11",
													"statements": [
														{
															"nativeSrc": "907:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:11"
																},
																"nativeSrc": "921:12:11",
																"nodeType": "YulFunctionCall",
																"src": "921:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:11",
																	"nodeType": "YulTypedName",
																	"src": "911:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:11"
																},
																"nativeSrc": "942:19:11",
																"nodeType": "YulFunctionCall",
																"src": "942:19:11"
															},
															"nativeSrc": "942:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:11"
																		},
																		"nativeSrc": "1005:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:11"
																		},
																		"nativeSrc": "1023:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:11"
																},
																"nativeSrc": "970:76:11",
																"nodeType": "YulFunctionCall",
																"src": "970:76:11"
															},
															"nativeSrc": "970:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:11"
														},
														{
															"nativeSrc": "1055:57:11",
															"nodeType": "YulAssignment",
															"src": "1055:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:11",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:11"
																						},
																						"nativeSrc": "1079:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:11",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:11"
																						},
																						"nativeSrc": "1096:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:11"
																				},
																				"nativeSrc": "1075:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:11"
																		},
																		"nativeSrc": "1066:39:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:11"
																},
																"nativeSrc": "1062:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:11",
														"nodeType": "YulTypedName",
														"src": "874:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:11",
														"nodeType": "YulTypedName",
														"src": "881:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:11",
														"nodeType": "YulTypedName",
														"src": "889:3:11",
														"type": ""
													}
												],
												"src": "847:271:11"
											},
											{
												"body": {
													"nativeSrc": "1244:99:11",
													"nodeType": "YulBlock",
													"src": "1244:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:11"
																},
																"nativeSrc": "1254:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:11"
															},
															"nativeSrc": "1254:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:11"
														},
														{
															"nativeSrc": "1284:53:11",
															"nodeType": "YulAssignment",
															"src": "1284:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:11"
																		},
																		"nativeSrc": "1318:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:11"
																},
																"nativeSrc": "1292:45:11",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:11",
														"nodeType": "YulTypedName",
														"src": "1213:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:11",
														"nodeType": "YulTypedName",
														"src": "1224:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:11",
														"nodeType": "YulTypedName",
														"src": "1235:4:11",
														"type": ""
													}
												],
												"src": "1123:220:11"
											},
											{
												"body": {
													"nativeSrc": "1418:156:11",
													"nodeType": "YulBlock",
													"src": "1418:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:11",
																"nodeType": "YulBlock",
																"src": "1464:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:11"
																			},
																			"nativeSrc": "1466:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:11"
																		},
																		"nativeSrc": "1466:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:11"
																		},
																		"nativeSrc": "1435:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:11"
																},
																"nativeSrc": "1431:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:11"
															},
															"nativeSrc": "1428:52:11",
															"nodeType": "YulIf",
															"src": "1428:52:11"
														},
														{
															"nativeSrc": "1489:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1489:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1502:1:11",
																"nodeType": "YulLiteral",
																"src": "1502:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1493:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1493:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1512:32:11",
															"nodeType": "YulAssignment",
															"src": "1512:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1534:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1521:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1521:12:11"
																},
																"nativeSrc": "1521:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1521:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1512:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1512:5:11"
																}
															]
														},
														{
															"nativeSrc": "1553:15:11",
															"nodeType": "YulAssignment",
															"src": "1553:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1563:5:11",
																"nodeType": "YulIdentifier",
																"src": "1563:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:11",
														"nodeType": "YulTypedName",
														"src": "1384:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:11",
														"nodeType": "YulTypedName",
														"src": "1395:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:11",
														"nodeType": "YulTypedName",
														"src": "1407:6:11",
														"type": ""
													}
												],
												"src": "1348:226:11"
											},
											{
												"body": {
													"nativeSrc": "1680:102:11",
													"nodeType": "YulBlock",
													"src": "1680:102:11",
													"statements": [
														{
															"nativeSrc": "1690:26:11",
															"nodeType": "YulAssignment",
															"src": "1690:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1702:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1702:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1713:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1713:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1698:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1698:3:11"
																},
																"nativeSrc": "1698:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1698:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1690:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1690:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1732:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1732:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1747:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1747:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1763:3:11",
																								"nodeType": "YulLiteral",
																								"src": "1763:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1768:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1768:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1759:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1759:3:11"
																						},
																						"nativeSrc": "1759:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1759:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1772:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1772:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1755:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1755:3:11"
																				},
																				"nativeSrc": "1755:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1755:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1743:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1743:3:11"
																		},
																		"nativeSrc": "1743:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1743:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1725:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:11"
																},
																"nativeSrc": "1725:51:11",
																"nodeType": "YulFunctionCall",
																"src": "1725:51:11"
															},
															"nativeSrc": "1725:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "1725:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1579:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1649:9:11",
														"nodeType": "YulTypedName",
														"src": "1649:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1660:6:11",
														"nodeType": "YulTypedName",
														"src": "1660:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1671:4:11",
														"nodeType": "YulTypedName",
														"src": "1671:4:11",
														"type": ""
													}
												],
												"src": "1579:203:11"
											},
											{
												"body": {
													"nativeSrc": "1836:124:11",
													"nodeType": "YulBlock",
													"src": "1836:124:11",
													"statements": [
														{
															"nativeSrc": "1846:29:11",
															"nodeType": "YulAssignment",
															"src": "1846:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1868:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1868:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1855:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1855:12:11"
																},
																"nativeSrc": "1855:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1855:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1846:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1846:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1938:16:11",
																"nodeType": "YulBlock",
																"src": "1938:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1947:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1947:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1950:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1940:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:11"
																			},
																			"nativeSrc": "1940:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1940:12:11"
																		},
																		"nativeSrc": "1940:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1897:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1908:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1908:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1923:3:11",
																										"nodeType": "YulLiteral",
																										"src": "1923:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1928:1:11",
																										"nodeType": "YulLiteral",
																										"src": "1928:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1919:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1919:3:11"
																								},
																								"nativeSrc": "1919:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1919:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1932:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1932:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1915:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1915:3:11"
																						},
																						"nativeSrc": "1915:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1915:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1904:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1904:3:11"
																				},
																				"nativeSrc": "1904:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1894:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:11"
																		},
																		"nativeSrc": "1894:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1887:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:11"
																},
																"nativeSrc": "1887:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1887:50:11"
															},
															"nativeSrc": "1884:70:11",
															"nodeType": "YulIf",
															"src": "1884:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1787:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1815:6:11",
														"nodeType": "YulTypedName",
														"src": "1815:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1826:5:11",
														"nodeType": "YulTypedName",
														"src": "1826:5:11",
														"type": ""
													}
												],
												"src": "1787:173:11"
											},
											{
												"body": {
													"nativeSrc": "2052:213:11",
													"nodeType": "YulBlock",
													"src": "2052:213:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2098:16:11",
																"nodeType": "YulBlock",
																"src": "2098:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2107:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2107:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2110:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2110:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2100:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2100:6:11"
																			},
																			"nativeSrc": "2100:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2100:12:11"
																		},
																		"nativeSrc": "2100:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2100:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2073:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2073:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2082:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2082:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2069:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:11"
																		},
																		"nativeSrc": "2069:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2094:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2094:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2065:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:11"
																},
																"nativeSrc": "2065:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2065:32:11"
															},
															"nativeSrc": "2062:52:11",
															"nodeType": "YulIf",
															"src": "2062:52:11"
														},
														{
															"nativeSrc": "2123:39:11",
															"nodeType": "YulAssignment",
															"src": "2123:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2152:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2152:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2133:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2133:18:11"
																},
																"nativeSrc": "2133:29:11",
																"nodeType": "YulFunctionCall",
																"src": "2133:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2123:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2123:6:11"
																}
															]
														},
														{
															"nativeSrc": "2171:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2171:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2184:1:11",
																"nodeType": "YulLiteral",
																"src": "2184:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2175:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2175:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2194:41:11",
															"nodeType": "YulAssignment",
															"src": "2194:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2220:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2216:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2216:3:11"
																		},
																		"nativeSrc": "2216:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2216:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2203:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2203:12:11"
																},
																"nativeSrc": "2203:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2203:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2194:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:11"
																}
															]
														},
														{
															"nativeSrc": "2244:15:11",
															"nodeType": "YulAssignment",
															"src": "2244:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2254:5:11",
																"nodeType": "YulIdentifier",
																"src": "2254:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2244:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2244:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1965:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2010:9:11",
														"nodeType": "YulTypedName",
														"src": "2010:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2021:7:11",
														"nodeType": "YulTypedName",
														"src": "2021:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2033:6:11",
														"nodeType": "YulTypedName",
														"src": "2033:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2041:6:11",
														"nodeType": "YulTypedName",
														"src": "2041:6:11",
														"type": ""
													}
												],
												"src": "1965:300:11"
											},
											{
												"body": {
													"nativeSrc": "2374:270:11",
													"nodeType": "YulBlock",
													"src": "2374:270:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2420:16:11",
																"nodeType": "YulBlock",
																"src": "2420:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2432:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2422:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2422:6:11"
																			},
																			"nativeSrc": "2422:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2422:12:11"
																		},
																		"nativeSrc": "2422:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2395:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2395:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2404:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2404:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2391:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:11"
																		},
																		"nativeSrc": "2391:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2416:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2416:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2387:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:3:11"
																},
																"nativeSrc": "2387:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:32:11"
															},
															"nativeSrc": "2384:52:11",
															"nodeType": "YulIf",
															"src": "2384:52:11"
														},
														{
															"nativeSrc": "2445:39:11",
															"nodeType": "YulAssignment",
															"src": "2445:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2474:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2474:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2455:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2455:18:11"
																},
																"nativeSrc": "2455:29:11",
																"nodeType": "YulFunctionCall",
																"src": "2455:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2445:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:11"
																}
															]
														},
														{
															"nativeSrc": "2493:48:11",
															"nodeType": "YulAssignment",
															"src": "2493:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2526:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2526:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2537:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2537:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2522:3:11"
																		},
																		"nativeSrc": "2522:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2503:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2503:18:11"
																},
																"nativeSrc": "2503:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2503:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2493:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:11"
																}
															]
														},
														{
															"nativeSrc": "2550:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2550:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2563:1:11",
																"nodeType": "YulLiteral",
																"src": "2563:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2554:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2554:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2573:41:11",
															"nodeType": "YulAssignment",
															"src": "2573:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2599:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2599:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2610:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2610:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2595:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:11"
																		},
																		"nativeSrc": "2595:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2582:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2582:12:11"
																},
																"nativeSrc": "2582:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2582:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2573:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2573:5:11"
																}
															]
														},
														{
															"nativeSrc": "2623:15:11",
															"nodeType": "YulAssignment",
															"src": "2623:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2633:5:11",
																"nodeType": "YulIdentifier",
																"src": "2633:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2623:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2270:374:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2324:9:11",
														"nodeType": "YulTypedName",
														"src": "2324:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2335:7:11",
														"nodeType": "YulTypedName",
														"src": "2335:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2347:6:11",
														"nodeType": "YulTypedName",
														"src": "2347:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2355:6:11",
														"nodeType": "YulTypedName",
														"src": "2355:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2363:6:11",
														"nodeType": "YulTypedName",
														"src": "2363:6:11",
														"type": ""
													}
												],
												"src": "2270:374:11"
											},
											{
												"body": {
													"nativeSrc": "2719:116:11",
													"nodeType": "YulBlock",
													"src": "2719:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2765:16:11",
																"nodeType": "YulBlock",
																"src": "2765:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2774:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2774:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2777:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2777:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2767:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2767:6:11"
																			},
																			"nativeSrc": "2767:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2767:12:11"
																		},
																		"nativeSrc": "2767:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2767:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2740:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2740:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2749:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2749:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2736:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:11"
																		},
																		"nativeSrc": "2736:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2761:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2761:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2732:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:11"
																},
																"nativeSrc": "2732:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2732:32:11"
															},
															"nativeSrc": "2729:52:11",
															"nodeType": "YulIf",
															"src": "2729:52:11"
														},
														{
															"nativeSrc": "2790:39:11",
															"nodeType": "YulAssignment",
															"src": "2790:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2819:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2819:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2800:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2800:18:11"
																},
																"nativeSrc": "2800:29:11",
																"nodeType": "YulFunctionCall",
																"src": "2800:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2790:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2790:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2649:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2685:9:11",
														"nodeType": "YulTypedName",
														"src": "2685:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2696:7:11",
														"nodeType": "YulTypedName",
														"src": "2696:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2708:6:11",
														"nodeType": "YulTypedName",
														"src": "2708:6:11",
														"type": ""
													}
												],
												"src": "2649:186:11"
											},
											{
												"body": {
													"nativeSrc": "2941:76:11",
													"nodeType": "YulBlock",
													"src": "2941:76:11",
													"statements": [
														{
															"nativeSrc": "2951:26:11",
															"nodeType": "YulAssignment",
															"src": "2951:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2963:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2963:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2974:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2974:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2959:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2959:3:11"
																},
																"nativeSrc": "2959:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2959:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2951:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2951:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2993:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2993:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3004:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3004:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2986:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:11"
																},
																"nativeSrc": "2986:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2986:25:11"
															},
															"nativeSrc": "2986:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "2986:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2840:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2910:9:11",
														"nodeType": "YulTypedName",
														"src": "2910:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2921:6:11",
														"nodeType": "YulTypedName",
														"src": "2921:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2932:4:11",
														"nodeType": "YulTypedName",
														"src": "2932:4:11",
														"type": ""
													}
												],
												"src": "2840:177:11"
											},
											{
												"body": {
													"nativeSrc": "3106:263:11",
													"nodeType": "YulBlock",
													"src": "3106:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3152:16:11",
																"nodeType": "YulBlock",
																"src": "3152:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3161:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3161:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3164:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3164:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3154:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3154:6:11"
																			},
																			"nativeSrc": "3154:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3154:12:11"
																		},
																		"nativeSrc": "3154:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3154:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3127:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3127:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3136:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3136:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3123:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:11"
																		},
																		"nativeSrc": "3123:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3123:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3119:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3119:3:11"
																},
																"nativeSrc": "3119:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3119:32:11"
															},
															"nativeSrc": "3116:52:11",
															"nodeType": "YulIf",
															"src": "3116:52:11"
														},
														{
															"nativeSrc": "3177:39:11",
															"nodeType": "YulAssignment",
															"src": "3177:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3206:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3206:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3187:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3187:18:11"
																},
																"nativeSrc": "3187:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3187:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3177:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3177:6:11"
																}
															]
														},
														{
															"nativeSrc": "3225:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3225:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3255:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3266:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3266:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3251:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:11"
																		},
																		"nativeSrc": "3251:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3238:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3238:12:11"
																},
																"nativeSrc": "3238:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3238:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3229:5:11",
																	"nodeType": "YulTypedName",
																	"src": "3229:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3323:16:11",
																"nodeType": "YulBlock",
																"src": "3323:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3332:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3335:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3335:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3325:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3325:6:11"
																			},
																			"nativeSrc": "3325:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3325:12:11"
																		},
																		"nativeSrc": "3325:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3325:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3292:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3292:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3313:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "3313:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3306:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "3306:6:11"
																						},
																						"nativeSrc": "3306:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3306:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3299:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3299:6:11"
																				},
																				"nativeSrc": "3299:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3299:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3289:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3289:2:11"
																		},
																		"nativeSrc": "3289:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3289:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3282:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:11"
																},
																"nativeSrc": "3282:40:11",
																"nodeType": "YulFunctionCall",
																"src": "3282:40:11"
															},
															"nativeSrc": "3279:60:11",
															"nodeType": "YulIf",
															"src": "3279:60:11"
														},
														{
															"nativeSrc": "3348:15:11",
															"nodeType": "YulAssignment",
															"src": "3348:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3358:5:11",
																"nodeType": "YulIdentifier",
																"src": "3358:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3348:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3022:347:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3064:9:11",
														"nodeType": "YulTypedName",
														"src": "3064:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3075:7:11",
														"nodeType": "YulTypedName",
														"src": "3075:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3087:6:11",
														"nodeType": "YulTypedName",
														"src": "3087:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3095:6:11",
														"nodeType": "YulTypedName",
														"src": "3095:6:11",
														"type": ""
													}
												],
												"src": "3022:347:11"
											},
											{
												"body": {
													"nativeSrc": "3406:95:11",
													"nodeType": "YulBlock",
													"src": "3406:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3423:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3423:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3430:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3430:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3435:10:11",
																				"nodeType": "YulLiteral",
																				"src": "3435:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3426:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:11"
																		},
																		"nativeSrc": "3426:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3416:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:11"
																},
																"nativeSrc": "3416:31:11",
																"nodeType": "YulFunctionCall",
																"src": "3416:31:11"
															},
															"nativeSrc": "3416:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "3416:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3463:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3463:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3466:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3466:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3456:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3456:6:11"
																},
																"nativeSrc": "3456:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3456:15:11"
															},
															"nativeSrc": "3456:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3456:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3487:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3487:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3490:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3490:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3480:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3480:6:11"
																},
																"nativeSrc": "3480:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3480:15:11"
															},
															"nativeSrc": "3480:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3480:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3374:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3374:127:11"
											},
											{
												"body": {
													"nativeSrc": "3636:1077:11",
													"nodeType": "YulBlock",
													"src": "3636:1077:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3683:16:11",
																"nodeType": "YulBlock",
																"src": "3683:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3692:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3692:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3695:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3695:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3685:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3685:6:11"
																			},
																			"nativeSrc": "3685:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3685:12:11"
																		},
																		"nativeSrc": "3685:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3685:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3657:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3657:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3666:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3666:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3653:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3653:3:11"
																		},
																		"nativeSrc": "3653:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3653:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3678:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3678:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3649:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:11"
																},
																"nativeSrc": "3649:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3649:33:11"
															},
															"nativeSrc": "3646:53:11",
															"nodeType": "YulIf",
															"src": "3646:53:11"
														},
														{
															"nativeSrc": "3708:39:11",
															"nodeType": "YulAssignment",
															"src": "3708:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3737:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3737:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3718:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3718:18:11"
																},
																"nativeSrc": "3718:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3718:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:11"
																}
															]
														},
														{
															"nativeSrc": "3756:48:11",
															"nodeType": "YulAssignment",
															"src": "3756:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3789:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3789:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3800:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3800:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3785:3:11"
																		},
																		"nativeSrc": "3785:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3785:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3766:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3766:18:11"
																},
																"nativeSrc": "3766:38:11",
																"nodeType": "YulFunctionCall",
																"src": "3766:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3756:6:11"
																}
															]
														},
														{
															"nativeSrc": "3813:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3813:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3826:1:11",
																"nodeType": "YulLiteral",
																"src": "3826:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3817:5:11",
																	"nodeType": "YulTypedName",
																	"src": "3817:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3836:41:11",
															"nodeType": "YulAssignment",
															"src": "3836:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3862:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3862:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3873:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3873:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3858:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:11"
																		},
																		"nativeSrc": "3858:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3845:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3845:12:11"
																},
																"nativeSrc": "3845:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3845:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3836:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3836:5:11"
																}
															]
														},
														{
															"nativeSrc": "3886:15:11",
															"nodeType": "YulAssignment",
															"src": "3886:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3896:5:11",
																"nodeType": "YulIdentifier",
																"src": "3896:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3886:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:11"
																}
															]
														},
														{
															"nativeSrc": "3910:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3941:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3952:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3937:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:11"
																		},
																		"nativeSrc": "3937:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3924:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3924:12:11"
																},
																"nativeSrc": "3924:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3924:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3914:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3999:16:11",
																"nodeType": "YulBlock",
																"src": "3999:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4008:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4008:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4011:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4011:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4001:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4001:6:11"
																			},
																			"nativeSrc": "4001:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4001:12:11"
																		},
																		"nativeSrc": "4001:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4001:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3971:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3971:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3979:18:11",
																		"nodeType": "YulLiteral",
																		"src": "3979:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3968:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3968:2:11"
																},
																"nativeSrc": "3968:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3968:30:11"
															},
															"nativeSrc": "3965:50:11",
															"nodeType": "YulIf",
															"src": "3965:50:11"
														},
														{
															"nativeSrc": "4024:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4024:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4038:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4049:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4049:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4034:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:11"
																},
																"nativeSrc": "4034:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4034:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4028:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4028:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4104:16:11",
																"nodeType": "YulBlock",
																"src": "4104:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4113:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4113:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4116:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4116:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4106:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4106:6:11"
																			},
																			"nativeSrc": "4106:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4106:12:11"
																		},
																		"nativeSrc": "4106:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4083:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4083:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4087:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4087:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4079:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4079:3:11"
																				},
																				"nativeSrc": "4079:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4079:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4094:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4094:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4075:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:11"
																		},
																		"nativeSrc": "4075:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4068:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:11"
																},
																"nativeSrc": "4068:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4068:35:11"
															},
															"nativeSrc": "4065:55:11",
															"nodeType": "YulIf",
															"src": "4065:55:11"
														},
														{
															"nativeSrc": "4129:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4129:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4156:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4156:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4143:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4143:12:11"
																},
																"nativeSrc": "4143:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4143:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4133:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4133:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4202:22:11",
																"nodeType": "YulBlock",
																"src": "4202:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4204:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4204:16:11"
																			},
																			"nativeSrc": "4204:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4204:18:11"
																		},
																		"nativeSrc": "4204:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4204:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4174:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4174:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4182:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4182:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4171:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4171:2:11"
																},
																"nativeSrc": "4171:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4171:30:11"
															},
															"nativeSrc": "4168:56:11",
															"nodeType": "YulIf",
															"src": "4168:56:11"
														},
														{
															"nativeSrc": "4233:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4233:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4253:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4247:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4247:5:11"
																},
																"nativeSrc": "4247:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4247:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4237:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4237:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4265:85:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4265:85:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4287:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4287:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "4311:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4311:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4319:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4319:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4307:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4307:3:11"
																								},
																								"nativeSrc": "4307:17:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4307:17:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "4330:2:11",
																										"nodeType": "YulLiteral",
																										"src": "4330:2:11",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "4326:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4326:3:11"
																								},
																								"nativeSrc": "4326:7:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4326:7:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4303:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4303:3:11"
																						},
																						"nativeSrc": "4303:31:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4303:31:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4336:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4336:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4299:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4299:3:11"
																				},
																				"nativeSrc": "4299:40:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4299:40:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4345:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4345:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4341:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4341:3:11"
																				},
																				"nativeSrc": "4341:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4341:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4295:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:11"
																		},
																		"nativeSrc": "4295:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4295:54:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4283:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:11"
																},
																"nativeSrc": "4283:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4283:67:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4269:10:11",
																	"nodeType": "YulTypedName",
																	"src": "4269:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4425:22:11",
																"nodeType": "YulBlock",
																"src": "4425:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4427:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:16:11"
																			},
																			"nativeSrc": "4427:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4427:18:11"
																		},
																		"nativeSrc": "4427:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4427:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4368:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4368:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:18:11",
																				"nodeType": "YulLiteral",
																				"src": "4380:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4365:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4365:2:11"
																		},
																		"nativeSrc": "4365:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4404:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4404:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4416:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4416:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4401:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4401:2:11"
																		},
																		"nativeSrc": "4401:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4401:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4362:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4362:2:11"
																},
																"nativeSrc": "4362:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4362:62:11"
															},
															"nativeSrc": "4359:88:11",
															"nodeType": "YulIf",
															"src": "4359:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4467:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "4467:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4456:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:11"
																},
																"nativeSrc": "4456:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4456:22:11"
															},
															"nativeSrc": "4456:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4456:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4494:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4494:6:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4502:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4502:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4487:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:11"
																},
																"nativeSrc": "4487:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4487:22:11"
															},
															"nativeSrc": "4487:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4487:22:11"
														},
														{
															"body": {
																"nativeSrc": "4559:16:11",
																"nodeType": "YulBlock",
																"src": "4559:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4568:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4568:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4571:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4571:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4561:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4561:6:11"
																			},
																			"nativeSrc": "4561:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4561:12:11"
																		},
																		"nativeSrc": "4561:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4561:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4532:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4536:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4536:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4528:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4528:3:11"
																				},
																				"nativeSrc": "4528:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4528:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4545:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:11"
																		},
																		"nativeSrc": "4524:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4550:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4550:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4521:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4521:2:11"
																},
																"nativeSrc": "4521:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4521:37:11"
															},
															"nativeSrc": "4518:57:11",
															"nodeType": "YulIf",
															"src": "4518:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4601:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4601:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4609:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4609:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4597:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:11"
																		},
																		"nativeSrc": "4597:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4618:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4618:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4622:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4622:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4614:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:11"
																		},
																		"nativeSrc": "4614:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4614:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4627:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4627:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4584:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4584:12:11"
																},
																"nativeSrc": "4584:50:11",
																"nodeType": "YulFunctionCall",
																"src": "4584:50:11"
															},
															"nativeSrc": "4584:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "4584:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4658:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4658:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4666:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4666:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4654:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4654:3:11"
																				},
																				"nativeSrc": "4654:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4654:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4675:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4650:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:11"
																		},
																		"nativeSrc": "4650:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4650:28:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4680:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4680:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4643:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4643:6:11"
																},
																"nativeSrc": "4643:39:11",
																"nodeType": "YulFunctionCall",
																"src": "4643:39:11"
															},
															"nativeSrc": "4643:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "4643:39:11"
														},
														{
															"nativeSrc": "4691:16:11",
															"nodeType": "YulAssignment",
															"src": "4691:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4701:6:11",
																"nodeType": "YulIdentifier",
																"src": "4701:6:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4691:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4691:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3506:1207:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3578:9:11",
														"nodeType": "YulTypedName",
														"src": "3578:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3589:7:11",
														"nodeType": "YulTypedName",
														"src": "3589:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3601:6:11",
														"nodeType": "YulTypedName",
														"src": "3601:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3609:6:11",
														"nodeType": "YulTypedName",
														"src": "3609:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3617:6:11",
														"nodeType": "YulTypedName",
														"src": "3617:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3625:6:11",
														"nodeType": "YulTypedName",
														"src": "3625:6:11",
														"type": ""
													}
												],
												"src": "3506:1207:11"
											},
											{
												"body": {
													"nativeSrc": "4805:173:11",
													"nodeType": "YulBlock",
													"src": "4805:173:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4851:16:11",
																"nodeType": "YulBlock",
																"src": "4851:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4860:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4860:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4863:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4863:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4853:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4853:6:11"
																			},
																			"nativeSrc": "4853:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4853:12:11"
																		},
																		"nativeSrc": "4853:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4853:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4826:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4826:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4835:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4822:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:11"
																		},
																		"nativeSrc": "4822:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4847:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4847:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4818:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4818:3:11"
																},
																"nativeSrc": "4818:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4818:32:11"
															},
															"nativeSrc": "4815:52:11",
															"nodeType": "YulIf",
															"src": "4815:52:11"
														},
														{
															"nativeSrc": "4876:39:11",
															"nodeType": "YulAssignment",
															"src": "4876:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4905:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4905:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4886:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4886:18:11"
																},
																"nativeSrc": "4886:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4886:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4876:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:11"
																}
															]
														},
														{
															"nativeSrc": "4924:48:11",
															"nodeType": "YulAssignment",
															"src": "4924:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4957:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4957:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4968:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4968:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4953:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4953:3:11"
																		},
																		"nativeSrc": "4953:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4953:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4934:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4934:18:11"
																},
																"nativeSrc": "4934:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4934:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4924:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4718:260:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4763:9:11",
														"nodeType": "YulTypedName",
														"src": "4763:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4774:7:11",
														"nodeType": "YulTypedName",
														"src": "4774:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4786:6:11",
														"nodeType": "YulTypedName",
														"src": "4786:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4794:6:11",
														"nodeType": "YulTypedName",
														"src": "4794:6:11",
														"type": ""
													}
												],
												"src": "4718:260:11"
											},
											{
												"body": {
													"nativeSrc": "5038:325:11",
													"nodeType": "YulBlock",
													"src": "5038:325:11",
													"statements": [
														{
															"nativeSrc": "5048:22:11",
															"nodeType": "YulAssignment",
															"src": "5048:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5062:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5062:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5065:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5065:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5058:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5058:3:11"
																},
																"nativeSrc": "5058:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5058:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5048:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5048:6:11"
																}
															]
														},
														{
															"nativeSrc": "5079:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5079:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5109:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5109:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5115:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5115:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5105:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5105:3:11"
																},
																"nativeSrc": "5105:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5105:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5083:18:11",
																	"nodeType": "YulTypedName",
																	"src": "5083:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5156:31:11",
																"nodeType": "YulBlock",
																"src": "5156:31:11",
																"statements": [
																	{
																		"nativeSrc": "5158:27:11",
																		"nodeType": "YulAssignment",
																		"src": "5158:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5172:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5172:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5180:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5180:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5168:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:11"
																			},
																			"nativeSrc": "5168:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5168:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5158:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5158:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5136:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "5136:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5129:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5129:6:11"
																},
																"nativeSrc": "5129:26:11",
																"nodeType": "YulFunctionCall",
																"src": "5129:26:11"
															},
															"nativeSrc": "5126:61:11",
															"nodeType": "YulIf",
															"src": "5126:61:11"
														},
														{
															"body": {
																"nativeSrc": "5246:111:11",
																"nodeType": "YulBlock",
																"src": "5246:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5267:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5267:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5274:3:11",
																							"nodeType": "YulLiteral",
																							"src": "5274:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5279:10:11",
																							"nodeType": "YulLiteral",
																							"src": "5279:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5270:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5270:3:11"
																					},
																					"nativeSrc": "5270:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5270:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5260:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5260:6:11"
																			},
																			"nativeSrc": "5260:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5260:31:11"
																		},
																		"nativeSrc": "5260:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5260:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5311:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5311:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5314:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5314:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5304:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5304:6:11"
																			},
																			"nativeSrc": "5304:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5304:15:11"
																		},
																		"nativeSrc": "5304:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5304:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5339:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5339:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5342:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5342:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5332:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5332:6:11"
																			},
																			"nativeSrc": "5332:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5332:15:11"
																		},
																		"nativeSrc": "5332:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5332:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5202:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "5202:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5225:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5225:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5233:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5233:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5222:2:11"
																		},
																		"nativeSrc": "5222:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5199:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5199:2:11"
																},
																"nativeSrc": "5199:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5199:38:11"
															},
															"nativeSrc": "5196:161:11",
															"nodeType": "YulIf",
															"src": "5196:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4983:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5018:4:11",
														"nodeType": "YulTypedName",
														"src": "5018:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5027:6:11",
														"nodeType": "YulTypedName",
														"src": "5027:6:11",
														"type": ""
													}
												],
												"src": "4983:380:11"
											},
											{
												"body": {
													"nativeSrc": "5542:223:11",
													"nodeType": "YulBlock",
													"src": "5542:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5559:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5559:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5552:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:11"
																},
																"nativeSrc": "5552:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5552:21:11"
															},
															"nativeSrc": "5552:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5552:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5593:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5593:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5604:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5604:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5589:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5589:3:11"
																		},
																		"nativeSrc": "5589:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5589:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5609:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5582:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:11"
																},
																"nativeSrc": "5582:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5582:30:11"
															},
															"nativeSrc": "5582:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5582:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5643:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:11"
																		},
																		"nativeSrc": "5628:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "5648:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5648:34:11",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5621:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:11"
																},
																"nativeSrc": "5621:62:11",
																"nodeType": "YulFunctionCall",
																"src": "5621:62:11"
															},
															"nativeSrc": "5621:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "5621:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5703:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5714:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5714:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5699:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:11"
																		},
																		"nativeSrc": "5699:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5699:18:11"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5719:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5719:3:11",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:11"
																},
																"nativeSrc": "5692:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5692:31:11"
															},
															"nativeSrc": "5692:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5692:31:11"
														},
														{
															"nativeSrc": "5732:27:11",
															"nodeType": "YulAssignment",
															"src": "5732:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5744:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5744:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5755:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5755:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5740:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5740:3:11"
																},
																"nativeSrc": "5740:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5740:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5732:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5732:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5368:397:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5519:9:11",
														"nodeType": "YulTypedName",
														"src": "5519:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5533:4:11",
														"nodeType": "YulTypedName",
														"src": "5533:4:11",
														"type": ""
													}
												],
												"src": "5368:397:11"
											},
											{
												"body": {
													"nativeSrc": "5944:235:11",
													"nodeType": "YulBlock",
													"src": "5944:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5961:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5961:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5972:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5972:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5954:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5954:6:11"
																},
																"nativeSrc": "5954:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5954:21:11"
															},
															"nativeSrc": "5954:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5954:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5995:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5995:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6006:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6006:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5991:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5991:3:11"
																		},
																		"nativeSrc": "5991:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5991:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6011:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6011:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5984:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:11"
																},
																"nativeSrc": "5984:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5984:30:11"
															},
															"nativeSrc": "5984:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5984:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6034:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6034:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6045:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6045:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6030:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6030:3:11"
																		},
																		"nativeSrc": "6030:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6030:18:11"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "6050:34:11",
																		"nodeType": "YulLiteral",
																		"src": "6050:34:11",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6023:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6023:6:11"
																},
																"nativeSrc": "6023:62:11",
																"nodeType": "YulFunctionCall",
																"src": "6023:62:11"
															},
															"nativeSrc": "6023:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "6023:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6105:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6116:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6116:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6101:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6101:3:11"
																		},
																		"nativeSrc": "6101:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6101:18:11"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "6121:15:11",
																		"nodeType": "YulLiteral",
																		"src": "6121:15:11",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6094:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6094:6:11"
																},
																"nativeSrc": "6094:43:11",
																"nodeType": "YulFunctionCall",
																"src": "6094:43:11"
															},
															"nativeSrc": "6094:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "6094:43:11"
														},
														{
															"nativeSrc": "6146:27:11",
															"nodeType": "YulAssignment",
															"src": "6146:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6158:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6158:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6169:3:11",
																		"nodeType": "YulLiteral",
																		"src": "6169:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6154:3:11"
																},
																"nativeSrc": "6154:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6154:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6146:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6146:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5770:409:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5921:9:11",
														"nodeType": "YulTypedName",
														"src": "5921:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5935:4:11",
														"nodeType": "YulTypedName",
														"src": "5935:4:11",
														"type": ""
													}
												],
												"src": "5770:409:11"
											},
											{
												"body": {
													"nativeSrc": "6358:174:11",
													"nodeType": "YulBlock",
													"src": "6358:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6375:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6375:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6386:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6386:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6368:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6368:6:11"
																},
																"nativeSrc": "6368:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6368:21:11"
															},
															"nativeSrc": "6368:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6368:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6409:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6409:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6420:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6420:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6405:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:11"
																		},
																		"nativeSrc": "6405:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6405:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6425:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6425:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:11"
																},
																"nativeSrc": "6398:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6398:30:11"
															},
															"nativeSrc": "6398:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6398:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6448:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6459:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6444:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6444:3:11"
																		},
																		"nativeSrc": "6444:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "6464:26:11",
																		"nodeType": "YulLiteral",
																		"src": "6464:26:11",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6437:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:11"
																},
																"nativeSrc": "6437:54:11",
																"nodeType": "YulFunctionCall",
																"src": "6437:54:11"
															},
															"nativeSrc": "6437:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "6437:54:11"
														},
														{
															"nativeSrc": "6500:26:11",
															"nodeType": "YulAssignment",
															"src": "6500:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6512:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6512:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6523:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6523:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6508:3:11"
																},
																"nativeSrc": "6508:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6508:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6500:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6500:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6184:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6335:9:11",
														"nodeType": "YulTypedName",
														"src": "6335:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6349:4:11",
														"nodeType": "YulTypedName",
														"src": "6349:4:11",
														"type": ""
													}
												],
												"src": "6184:348:11"
											},
											{
												"body": {
													"nativeSrc": "6711:231:11",
													"nodeType": "YulBlock",
													"src": "6711:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6728:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6728:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6739:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6739:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6721:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:11"
																},
																"nativeSrc": "6721:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6721:21:11"
															},
															"nativeSrc": "6721:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6721:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6762:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6762:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6773:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6773:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6758:3:11"
																		},
																		"nativeSrc": "6758:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6758:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6778:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6751:6:11"
																},
																"nativeSrc": "6751:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6751:30:11"
															},
															"nativeSrc": "6751:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6751:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6801:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6801:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6812:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6812:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6797:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6797:3:11"
																		},
																		"nativeSrc": "6797:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:18:11"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "6817:34:11",
																		"nodeType": "YulLiteral",
																		"src": "6817:34:11",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6790:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:11"
																},
																"nativeSrc": "6790:62:11",
																"nodeType": "YulFunctionCall",
																"src": "6790:62:11"
															},
															"nativeSrc": "6790:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "6790:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6872:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6872:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6883:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6868:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6868:3:11"
																		},
																		"nativeSrc": "6868:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6868:18:11"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6888:11:11",
																		"nodeType": "YulLiteral",
																		"src": "6888:11:11",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6861:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6861:6:11"
																},
																"nativeSrc": "6861:39:11",
																"nodeType": "YulFunctionCall",
																"src": "6861:39:11"
															},
															"nativeSrc": "6861:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "6861:39:11"
														},
														{
															"nativeSrc": "6909:27:11",
															"nodeType": "YulAssignment",
															"src": "6909:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6921:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6921:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6932:3:11",
																		"nodeType": "YulLiteral",
																		"src": "6932:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6917:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6917:3:11"
																},
																"nativeSrc": "6917:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6917:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6909:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6909:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6537:405:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6688:9:11",
														"nodeType": "YulTypedName",
														"src": "6688:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6702:4:11",
														"nodeType": "YulTypedName",
														"src": "6702:4:11",
														"type": ""
													}
												],
												"src": "6537:405:11"
											},
											{
												"body": {
													"nativeSrc": "7134:309:11",
													"nodeType": "YulBlock",
													"src": "7134:309:11",
													"statements": [
														{
															"nativeSrc": "7144:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7144:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7164:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7164:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7158:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:11"
																},
																"nativeSrc": "7158:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7158:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7148:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7148:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7219:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7219:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7227:4:11",
																				"nodeType": "YulLiteral",
																				"src": "7227:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7215:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7215:3:11"
																		},
																		"nativeSrc": "7215:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7215:17:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7234:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7234:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7239:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7239:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7180:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "7180:34:11"
																},
																"nativeSrc": "7180:66:11",
																"nodeType": "YulFunctionCall",
																"src": "7180:66:11"
															},
															"nativeSrc": "7180:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "7180:66:11"
														},
														{
															"nativeSrc": "7255:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7255:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7272:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7272:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7277:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7268:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7268:3:11"
																},
																"nativeSrc": "7268:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7268:16:11"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "7259:5:11",
																	"nodeType": "YulTypedName",
																	"src": "7259:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7293:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7293:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7315:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7315:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7309:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7309:5:11"
																},
																"nativeSrc": "7309:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7309:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "7297:8:11",
																	"nodeType": "YulTypedName",
																	"src": "7297:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7370:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7370:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7378:4:11",
																				"nodeType": "YulLiteral",
																				"src": "7378:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7366:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:11"
																		},
																		"nativeSrc": "7366:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7366:17:11"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "7385:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7385:5:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7392:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "7392:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7331:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "7331:34:11"
																},
																"nativeSrc": "7331:70:11",
																"nodeType": "YulFunctionCall",
																"src": "7331:70:11"
															},
															"nativeSrc": "7331:70:11",
															"nodeType": "YulExpressionStatement",
															"src": "7331:70:11"
														},
														{
															"nativeSrc": "7410:27:11",
															"nodeType": "YulAssignment",
															"src": "7410:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "7421:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7421:5:11"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7428:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "7428:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7417:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7417:3:11"
																},
																"nativeSrc": "7417:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7417:20:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7410:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6947:496:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7102:3:11",
														"nodeType": "YulTypedName",
														"src": "7102:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7107:6:11",
														"nodeType": "YulTypedName",
														"src": "7107:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7115:6:11",
														"nodeType": "YulTypedName",
														"src": "7115:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7126:3:11",
														"nodeType": "YulTypedName",
														"src": "7126:3:11",
														"type": ""
													}
												],
												"src": "6947:496:11"
											},
											{
												"body": {
													"nativeSrc": "7622:227:11",
													"nodeType": "YulBlock",
													"src": "7622:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7639:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7639:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7650:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7650:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7632:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7632:6:11"
																},
																"nativeSrc": "7632:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7632:21:11"
															},
															"nativeSrc": "7632:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7632:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7673:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7673:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7684:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7684:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7669:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:11"
																		},
																		"nativeSrc": "7669:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7689:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7689:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7662:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7662:6:11"
																},
																"nativeSrc": "7662:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7662:30:11"
															},
															"nativeSrc": "7662:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7662:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7712:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7723:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7723:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7708:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:11"
																		},
																		"nativeSrc": "7708:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "7728:34:11",
																		"nodeType": "YulLiteral",
																		"src": "7728:34:11",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7701:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:11"
																},
																"nativeSrc": "7701:62:11",
																"nodeType": "YulFunctionCall",
																"src": "7701:62:11"
															},
															"nativeSrc": "7701:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "7701:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7783:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7783:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7794:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7779:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:11"
																		},
																		"nativeSrc": "7779:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7779:18:11"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "7799:7:11",
																		"nodeType": "YulLiteral",
																		"src": "7799:7:11",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7772:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:11"
																},
																"nativeSrc": "7772:35:11",
																"nodeType": "YulFunctionCall",
																"src": "7772:35:11"
															},
															"nativeSrc": "7772:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "7772:35:11"
														},
														{
															"nativeSrc": "7816:27:11",
															"nodeType": "YulAssignment",
															"src": "7816:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7828:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7828:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7839:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7839:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7824:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:11"
																},
																"nativeSrc": "7824:19:11",
																"nodeType": "YulFunctionCall",
																"src": "7824:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7816:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7816:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7448:401:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7599:9:11",
														"nodeType": "YulTypedName",
														"src": "7599:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7613:4:11",
														"nodeType": "YulTypedName",
														"src": "7613:4:11",
														"type": ""
													}
												],
												"src": "7448:401:11"
											},
											{
												"body": {
													"nativeSrc": "8028:226:11",
													"nodeType": "YulBlock",
													"src": "8028:226:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8045:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8045:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8056:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8056:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8038:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8038:6:11"
																},
																"nativeSrc": "8038:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8038:21:11"
															},
															"nativeSrc": "8038:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8038:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8079:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8079:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8090:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8090:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8075:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8075:3:11"
																		},
																		"nativeSrc": "8075:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8075:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8095:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8095:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8068:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:11"
																},
																"nativeSrc": "8068:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8068:30:11"
															},
															"nativeSrc": "8068:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8068:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8118:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8118:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8129:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8129:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8114:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8114:3:11"
																		},
																		"nativeSrc": "8114:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8114:18:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8134:34:11",
																		"nodeType": "YulLiteral",
																		"src": "8134:34:11",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8107:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:11"
																},
																"nativeSrc": "8107:62:11",
																"nodeType": "YulFunctionCall",
																"src": "8107:62:11"
															},
															"nativeSrc": "8107:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "8107:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8189:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8189:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8200:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8200:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8185:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8185:3:11"
																		},
																		"nativeSrc": "8185:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8185:18:11"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8205:6:11",
																		"nodeType": "YulLiteral",
																		"src": "8205:6:11",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8178:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8178:6:11"
																},
																"nativeSrc": "8178:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8178:34:11"
															},
															"nativeSrc": "8178:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "8178:34:11"
														},
														{
															"nativeSrc": "8221:27:11",
															"nodeType": "YulAssignment",
															"src": "8221:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8233:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8233:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8244:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8244:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8229:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:11"
																},
																"nativeSrc": "8229:19:11",
																"nodeType": "YulFunctionCall",
																"src": "8229:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8221:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8221:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7854:400:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8005:9:11",
														"nodeType": "YulTypedName",
														"src": "8005:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8019:4:11",
														"nodeType": "YulTypedName",
														"src": "8019:4:11",
														"type": ""
													}
												],
												"src": "7854:400:11"
											},
											{
												"body": {
													"nativeSrc": "8433:175:11",
													"nodeType": "YulBlock",
													"src": "8433:175:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8450:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8450:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8461:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8461:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8443:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8443:6:11"
																},
																"nativeSrc": "8443:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8443:21:11"
															},
															"nativeSrc": "8443:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8443:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8484:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8484:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8495:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8495:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8480:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8480:3:11"
																		},
																		"nativeSrc": "8480:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8480:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8500:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8500:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8473:6:11"
																},
																"nativeSrc": "8473:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8473:30:11"
															},
															"nativeSrc": "8473:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8473:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8523:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8523:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8534:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8534:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8519:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8519:3:11"
																		},
																		"nativeSrc": "8519:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8519:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "8539:27:11",
																		"nodeType": "YulLiteral",
																		"src": "8539:27:11",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8512:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8512:6:11"
																},
																"nativeSrc": "8512:55:11",
																"nodeType": "YulFunctionCall",
																"src": "8512:55:11"
															},
															"nativeSrc": "8512:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "8512:55:11"
														},
														{
															"nativeSrc": "8576:26:11",
															"nodeType": "YulAssignment",
															"src": "8576:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8588:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8588:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8599:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8599:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8584:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8584:3:11"
																},
																"nativeSrc": "8584:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8584:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8576:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8576:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8259:349:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8410:9:11",
														"nodeType": "YulTypedName",
														"src": "8410:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8424:4:11",
														"nodeType": "YulTypedName",
														"src": "8424:4:11",
														"type": ""
													}
												],
												"src": "8259:349:11"
											},
											{
												"body": {
													"nativeSrc": "8787:240:11",
													"nodeType": "YulBlock",
													"src": "8787:240:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8804:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8804:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8815:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8815:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8797:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:11"
																},
																"nativeSrc": "8797:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8797:21:11"
															},
															"nativeSrc": "8797:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8797:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8838:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8838:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8849:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8849:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8834:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8834:3:11"
																		},
																		"nativeSrc": "8834:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8834:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8854:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8854:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8827:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:11"
																},
																"nativeSrc": "8827:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8827:30:11"
															},
															"nativeSrc": "8827:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8827:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8877:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8877:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8888:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8888:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8873:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8873:3:11"
																		},
																		"nativeSrc": "8873:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8873:18:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "8893:34:11",
																		"nodeType": "YulLiteral",
																		"src": "8893:34:11",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8866:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:11"
																},
																"nativeSrc": "8866:62:11",
																"nodeType": "YulFunctionCall",
																"src": "8866:62:11"
															},
															"nativeSrc": "8866:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "8866:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8948:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8948:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8959:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8959:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8944:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8944:3:11"
																		},
																		"nativeSrc": "8944:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8944:18:11"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "8964:20:11",
																		"nodeType": "YulLiteral",
																		"src": "8964:20:11",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8937:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8937:6:11"
																},
																"nativeSrc": "8937:48:11",
																"nodeType": "YulFunctionCall",
																"src": "8937:48:11"
															},
															"nativeSrc": "8937:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "8937:48:11"
														},
														{
															"nativeSrc": "8994:27:11",
															"nodeType": "YulAssignment",
															"src": "8994:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9006:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9006:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9017:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9017:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9002:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9002:3:11"
																},
																"nativeSrc": "9002:19:11",
																"nodeType": "YulFunctionCall",
																"src": "9002:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8994:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8994:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8613:414:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8764:9:11",
														"nodeType": "YulTypedName",
														"src": "8764:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8778:4:11",
														"nodeType": "YulTypedName",
														"src": "8778:4:11",
														"type": ""
													}
												],
												"src": "8613:414:11"
											},
											{
												"body": {
													"nativeSrc": "9064:95:11",
													"nodeType": "YulBlock",
													"src": "9064:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9081:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9081:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9088:3:11",
																				"nodeType": "YulLiteral",
																				"src": "9088:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9093:10:11",
																				"nodeType": "YulLiteral",
																				"src": "9093:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9084:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9084:3:11"
																		},
																		"nativeSrc": "9084:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9084:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9074:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:11"
																},
																"nativeSrc": "9074:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9074:31:11"
															},
															"nativeSrc": "9074:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "9074:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9121:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9121:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9124:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9124:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:11"
																},
																"nativeSrc": "9114:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9114:15:11"
															},
															"nativeSrc": "9114:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9114:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9145:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9145:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9148:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9148:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9138:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9138:6:11"
																},
																"nativeSrc": "9138:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9138:15:11"
															},
															"nativeSrc": "9138:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9138:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9032:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9032:127:11"
											},
											{
												"body": {
													"nativeSrc": "9367:282:11",
													"nodeType": "YulBlock",
													"src": "9367:282:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9384:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9384:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9399:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9399:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9415:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9415:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9420:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9420:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9411:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9411:3:11"
																						},
																						"nativeSrc": "9411:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9411:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9424:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9424:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9407:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9407:3:11"
																				},
																				"nativeSrc": "9407:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9407:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9395:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:11"
																		},
																		"nativeSrc": "9395:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9377:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:11"
																},
																"nativeSrc": "9377:51:11",
																"nodeType": "YulFunctionCall",
																"src": "9377:51:11"
															},
															"nativeSrc": "9377:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "9377:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9448:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9448:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9459:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9459:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9444:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:11"
																		},
																		"nativeSrc": "9444:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9444:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9468:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9468:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9484:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9484:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9489:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9489:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9480:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9480:3:11"
																						},
																						"nativeSrc": "9480:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9480:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9493:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9493:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9476:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9476:3:11"
																				},
																				"nativeSrc": "9476:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9476:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9464:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:11"
																		},
																		"nativeSrc": "9464:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9464:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9437:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:11"
																},
																"nativeSrc": "9437:60:11",
																"nodeType": "YulFunctionCall",
																"src": "9437:60:11"
															},
															"nativeSrc": "9437:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "9437:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9517:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9517:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9528:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9528:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9513:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9513:3:11"
																		},
																		"nativeSrc": "9513:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9533:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9533:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9506:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9506:6:11"
																},
																"nativeSrc": "9506:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9506:34:11"
															},
															"nativeSrc": "9506:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9506:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9560:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9560:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9571:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9571:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9556:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:11"
																		},
																		"nativeSrc": "9556:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9576:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9576:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9549:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9549:6:11"
																},
																"nativeSrc": "9549:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9549:31:11"
															},
															"nativeSrc": "9549:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "9549:31:11"
														},
														{
															"nativeSrc": "9589:54:11",
															"nodeType": "YulAssignment",
															"src": "9589:54:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9615:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9615:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9627:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9627:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9638:3:11",
																				"nodeType": "YulLiteral",
																				"src": "9638:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9623:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9623:3:11"
																		},
																		"nativeSrc": "9623:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9623:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "9597:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9597:17:11"
																},
																"nativeSrc": "9597:46:11",
																"nodeType": "YulFunctionCall",
																"src": "9597:46:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9589:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9589:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9164:485:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9312:9:11",
														"nodeType": "YulTypedName",
														"src": "9312:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9323:6:11",
														"nodeType": "YulTypedName",
														"src": "9323:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9331:6:11",
														"nodeType": "YulTypedName",
														"src": "9331:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9339:6:11",
														"nodeType": "YulTypedName",
														"src": "9339:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9347:6:11",
														"nodeType": "YulTypedName",
														"src": "9347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9358:4:11",
														"nodeType": "YulTypedName",
														"src": "9358:4:11",
														"type": ""
													}
												],
												"src": "9164:485:11"
											},
											{
												"body": {
													"nativeSrc": "9734:169:11",
													"nodeType": "YulBlock",
													"src": "9734:169:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9780:16:11",
																"nodeType": "YulBlock",
																"src": "9780:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9789:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9789:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9792:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9792:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9782:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9782:6:11"
																			},
																			"nativeSrc": "9782:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9782:12:11"
																		},
																		"nativeSrc": "9782:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9782:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9755:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9755:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9764:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9764:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9751:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9751:3:11"
																		},
																		"nativeSrc": "9751:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9751:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9776:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9776:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9747:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:11"
																},
																"nativeSrc": "9747:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9747:32:11"
															},
															"nativeSrc": "9744:52:11",
															"nodeType": "YulIf",
															"src": "9744:52:11"
														},
														{
															"nativeSrc": "9805:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9805:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9824:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9824:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9818:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9818:5:11"
																},
																"nativeSrc": "9818:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9818:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9809:5:11",
																	"nodeType": "YulTypedName",
																	"src": "9809:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9867:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9867:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "9843:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "9843:23:11"
																},
																"nativeSrc": "9843:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9843:30:11"
															},
															"nativeSrc": "9843:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "9843:30:11"
														},
														{
															"nativeSrc": "9882:15:11",
															"nodeType": "YulAssignment",
															"src": "9882:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "9892:5:11",
																"nodeType": "YulIdentifier",
																"src": "9892:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9882:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9882:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "9654:249:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9700:9:11",
														"nodeType": "YulTypedName",
														"src": "9700:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9711:7:11",
														"nodeType": "YulTypedName",
														"src": "9711:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9723:6:11",
														"nodeType": "YulTypedName",
														"src": "9723:6:11",
														"type": ""
													}
												],
												"src": "9654:249:11"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xE91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xE91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x5BB JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x40B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BA DUP4 DUP4 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3C9 CALLER DUP3 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH2 0x3BA DUP4 DUP4 DUP4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x3BA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x50F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x50B CALLER DUP4 DUP4 PUSH2 0x86E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x519 CALLER DUP4 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH2 0x541 DUP5 DUP5 DUP5 DUP5 PUSH2 0x93C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x552 DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5B4 JUMP JUMPDEST DUP1 PUSH2 0x593 DUP5 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A4 SWAP3 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x652 DUP3 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x697 DUP4 PUSH2 0x40B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x702 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F7 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71D DUP3 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B8 DUP3 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x947 DUP5 DUP5 DUP5 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x953 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x97C DUP4 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99C PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x9D0 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA46 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA81 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA7E SWAP2 DUP2 ADD SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xADE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF8C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x702 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xB42 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xB6E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xB8C JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xBA4 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xBB8 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xBCA JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5B4 DUP2 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC11 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xC4A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCEE DUP5 PUSH2 0xC8A JUMP JUMPDEST SWAP3 POP PUSH2 0xCFC PUSH1 0x20 DUP6 ADD PUSH2 0xC8A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B4 DUP3 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD44 DUP4 PUSH2 0xC8A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD99 DUP6 PUSH2 0xC8A JUMP JUMPDEST SWAP4 POP PUSH2 0xDA7 PUSH1 0x20 DUP7 ADD PUSH2 0xC8A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDF5 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE24 PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7A DUP4 PUSH2 0xC8A JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 PUSH1 0x20 DUP5 ADD PUSH2 0xC8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xF2A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC0E JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xF3E DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC0E JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1011 SWAP1 DUP4 ADD DUP5 PUSH2 0xC32 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5B4 DUP2 PUSH2 0xBDB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 LOG3 PUSH11 0x7C52B73E456315BB208177 PUSH32 0xBD6B3798AEDCFC83FB9082CED600D11FE964736F6C634300081A003300000000 ",
							"sourceMap": "628:16389:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:11;;558:22;540:41;;528:2;513:18;1570:300:0;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3947:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:11;;;1725:51;;1713:2;1698:18;3947:167:0;1579:203:11;3468:418:0;;;;;;:::i;:::-;;:::i;:::-;;4624:296;;;;;;:::i;:::-;;:::i;4986:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2986:25:11;;;2974:2;2959:18;1929:204:0;2840:177:11;2633:102:0;;;:::i;4181:153::-;;;;;;:::i;:::-;;:::i;5201:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4400:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4520:25:0;;;4497:4;4520:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4400:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:0;;-1:-1:-1;;;1707:40:0;;:104;;-1:-1:-1;;;;;;;1763:48:0;;-1:-1:-1;;;1763:48:0;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1827:36:0;1688:175;1570:300;-1:-1:-1;;1570:300:0:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3947:167::-;4023:7;4042:23;4057:7;4042:14;:23::i;:::-;-1:-1:-1;4083:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4083:24:0;;3947:167::o;3468:418::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:0;:2;-1:-1:-1;;;;;3605:11:0;;3597:57;;;;-1:-1:-1;;;3597:57:0;;5570:2:11;3597:57:0;;;5552:21:11;5609:2;5589:18;;;5582:30;5648:34;5628:18;;;5621:62;-1:-1:-1;;;5699:18:11;;;5692:31;5740:19;;3597:57:0;;;;;;;;;3858:21;3867:2;3871:7;3858:8;:21::i;:::-;3538:348;3468:418;;:::o;4624:296::-;4783:41;719:10:5;4816:7:0;4783:18;:41::i;:::-;4775:99;;;;-1:-1:-1;;;4775:99:0;;;;;;;:::i;:::-;4885:28;4895:4;4901:2;4905:7;4885:9;:28::i;4986:149::-;5089:39;5106:4;5112:2;5116:7;5089:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6806:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6806:16:0;;2324:56;;;;-1:-1:-1;;;2324:56:0;;6386:2:11;2324:56:0;;;6368:21:11;6425:2;6405:18;;;6398:30;-1:-1:-1;;;6444:18:11;;;6437:54;6508:18;;2324:56:0;6184:348:11;1929:204:0;2001:7;-1:-1:-1;;;;;2028:19:0;;2020:73;;;;-1:-1:-1;;;2020:73:0;;6739:2:11;2020:73:0;;;6721:21:11;6778:2;6758:18;;;6751:30;6817:34;6797:18;;;6790:62;-1:-1:-1;;;6868:18:11;;;6861:39;6917:19;;2020:73:0;6537:405:11;2020:73:0;-1:-1:-1;;;;;;2110:16:0;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4181:153::-;4275:52;719:10:5;4308:8:0;4318;4275:18;:52::i;:::-;4181:153;;:::o;5201:276::-;5331:41;719:10:5;5364:7:0;5331:18;:41::i;:::-;5323:99;;;;-1:-1:-1;;;5323:99:0;;;;;;;:::i;:::-;5432:38;5446:4;5452:2;5456:7;5465:4;5432:13;:38::i;:::-;5201:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:0;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:0:o;13252:133::-;7197:4;6806:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6806:16:0;13325:53;;;;-1:-1:-1;;;13325:53:0;;6386:2:11;13325:53:0;;;6368:21:11;6425:2;6405:18;;;6398:30;-1:-1:-1;;;6444:18:11;;;6437:54;6508:18;;13325:53:0;6184:348:11;13325:53:0;13252:133;:::o;12584:171::-;12658:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12658:29:0;-1:-1:-1;;;;;12658:29:0;;;;;;;;:24;;12711:23;12658:24;12711:14;:23::i;:::-;-1:-1:-1;;;;;12702:46:0;;;;;;;;;;;12584:171;;:::o;7416:261::-;7509:4;7525:13;7541:23;7556:7;7541:14;:23::i;:::-;7525:39;;7593:5;-1:-1:-1;;;;;7582:16:0;:7;-1:-1:-1;;;;;7582:16:0;;:52;;;-1:-1:-1;;;;;;4520:25:0;;;4497:4;4520:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7602:32;7582:87;;;;7662:7;-1:-1:-1;;;;;7638:31:0;:20;7650:7;7638:11;:20::i;:::-;-1:-1:-1;;;;;7638:31:0;;7582:87;7574:96;7416:261;-1:-1:-1;;;;7416:261:0:o;11269:1203::-;11393:4;-1:-1:-1;;;;;11366:31:0;:23;11381:7;11366:14;:23::i;:::-;-1:-1:-1;;;;;11366:31:0;;11358:81;;;;-1:-1:-1;;;11358:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11457:16:0;;11449:65;;;;-1:-1:-1;;;11449:65:0;;8056:2:11;11449:65:0;;;8038:21:11;8095:2;8075:18;;;8068:30;8134:34;8114:18;;;8107:62;-1:-1:-1;;;8185:18:11;;;8178:34;8229:19;;11449:65:0;7854:400:11;11449:65:0;11694:4;-1:-1:-1;;;;;11667:31:0;:23;11682:7;11667:14;:23::i;:::-;-1:-1:-1;;;;;11667:31:0;;11659:81;;;;-1:-1:-1;;;11659:81:0;;;;;;;:::i;:::-;11809:24;;;;:15;:24;;;;;;;;11802:31;;-1:-1:-1;;;;;;11802:31:0;;;;;;-1:-1:-1;;;;;12277:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12277:20:0;;;12311:13;;;;;;;;;:18;;11802:31;12311:18;;;12349:16;;;:7;:16;;;;;;:21;;;;;;;;;;12386:27;;11825:7;;12386:27;;;3538:348;3468:418;;:::o;12891:277::-;13011:8;-1:-1:-1;;;;;13002:17:0;:5;-1:-1:-1;;;;;13002:17:0;;12994:55;;;;-1:-1:-1;;;12994:55:0;;8461:2:11;12994:55:0;;;8443:21:11;8500:2;8480:18;;;8473:30;8539:27;8519:18;;;8512:55;8584:18;;12994:55:0;8259:349:11;12994:55:0;-1:-1:-1;;;;;13059:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13059:46:0;;;;;;;;;;13120:41;;540::11;;;13120::0;;513:18:11;13120:41:0;;;;;;;12891:277;;;:::o;6338:267::-;6450:28;6460:4;6466:2;6470:7;6450:9;:28::i;:::-;6496:47;6519:4;6525:2;6529:7;6538:4;6496:22;:47::i;:::-;6488:110;;;;-1:-1:-1;;;6488:110:0;;;;;;;:::i;447:696:6:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:6;-1:-1:-1;604:41:6;-1:-1:-1;765:28:6;;;781:2;765:28;820:280;-1:-1:-1;;851:5:6;-1:-1:-1;;;985:2:6;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:6;820:280;1064:21;-1:-1:-1;1120:6:6;447:696;-1:-1:-1;;;447:696:6:o;13937:831:0:-;14086:4;-1:-1:-1;;;;;14106:13:0;;1702:19:4;:23;14102:660:0;;14141:71;;-1:-1:-1;;;14141:71:0;;-1:-1:-1;;;;;14141:36:0;;;;;:71;;719:10:5;;14192:4:0;;14198:7;;14207:4;;14141:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14141:71:0;;;;;;;;-1:-1:-1;;14141:71:0;;;;;;;;;;;;:::i;:::-;;;14137:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14379:6;:13;14396:1;14379:18;14375:321;;14421:60;;-1:-1:-1;;;14421:60:0;;;;;;;:::i;14375:321::-;14648:6;14642:13;14633:6;14629:2;14625:15;14618:38;14137:573;-1:-1:-1;;;;;;14262:51:0;-1:-1:-1;;;14262:51:0;;-1:-1:-1;14255:58:0;;14102:660;-1:-1:-1;14747:4:0;13937:831;;;;;;:::o;10139:916:9:-;10192:7;;-1:-1:-1;;;10267:17:9;;10263:103;;-1:-1:-1;;;10304:17:9;;;-1:-1:-1;10349:2:9;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:9;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:9;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:9;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:9;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:9;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:9:o;14:131:11:-;-1:-1:-1;;;;;;88:32:11;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:11;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:11;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:11:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:11;;1348:226;-1:-1:-1;1348:226:11:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:11;;1894:42;;1884:70;;1950:1;1947;1940:12;1884:70;1787:173;;;:::o;1965:300::-;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:11:o;2270:374::-;2347:6;2355;2363;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2455:29;2474:9;2455:29;:::i;:::-;2445:39;;2503:38;2537:2;2526:9;2522:18;2503:38;:::i;:::-;2270:374;;2493:48;;-1:-1:-1;;;2610:2:11;2595:18;;;;2582:32;;2270:374::o;2649:186::-;2708:6;2761:2;2749:9;2740:7;2736:23;2732:32;2729:52;;;2777:1;2774;2767:12;2729:52;2800:29;2819:9;2800:29;:::i;3022:347::-;3087:6;3095;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3187:29;3206:9;3187:29;:::i;:::-;3177:39;;3266:2;3255:9;3251:18;3238:32;3313:5;3306:13;3299:21;3292:5;3289:32;3279:60;;3335:1;3332;3325:12;3279:60;3358:5;3348:15;;;3022:347;;;;;:::o;3374:127::-;3435:10;3430:3;3426:20;3423:1;3416:31;3466:4;3463:1;3456:15;3490:4;3487:1;3480:15;3506:1207;3601:6;3609;3617;3625;3678:3;3666:9;3657:7;3653:23;3649:33;3646:53;;;3695:1;3692;3685:12;3646:53;3718:29;3737:9;3718:29;:::i;:::-;3708:39;;3766:38;3800:2;3789:9;3785:18;3766:38;:::i;:::-;3756:48;-1:-1:-1;3873:2:11;3858:18;;3845:32;;-1:-1:-1;3952:2:11;3937:18;;3924:32;3979:18;3968:30;;3965:50;;;4011:1;4008;4001:12;3965:50;4034:22;;4087:4;4079:13;;4075:27;-1:-1:-1;4065:55:11;;4116:1;4113;4106:12;4065:55;4156:2;4143:16;4182:18;4174:6;4171:30;4168:56;;;4204:18;;:::i;:::-;4253:2;4247:9;4345:2;4307:17;;-1:-1:-1;;4303:31:11;;;4336:2;4299:40;4295:54;4283:67;;4380:18;4365:34;;4401:22;;;4362:62;4359:88;;;4427:18;;:::i;:::-;4463:2;4456:22;4487;;;4528:15;;;4545:2;4524:24;4521:37;-1:-1:-1;4518:57:11;;;4571:1;4568;4561:12;4518:57;4627:6;4622:2;4618;4614:11;4609:2;4601:6;4597:15;4584:50;4680:1;4675:2;4666:6;4658;4654:19;4650:28;4643:39;4701:6;4691:16;;;;;3506:1207;;;;;;;:::o;4718:260::-;4786:6;4794;4847:2;4835:9;4826:7;4822:23;4818:32;4815:52;;;4863:1;4860;4853:12;4815:52;4886:29;4905:9;4886:29;:::i;:::-;4876:39;;4934:38;4968:2;4957:9;4953:18;4934:38;:::i;:::-;4924:48;;4718:260;;;;;:::o;4983:380::-;5062:1;5058:12;;;;5105;;;5126:61;;5180:4;5172:6;5168:17;5158:27;;5126:61;5233:2;5225:6;5222:14;5202:18;5199:38;5196:161;;5279:10;5274:3;5270:20;5267:1;5260:31;5314:4;5311:1;5304:15;5342:4;5339:1;5332:15;5196:161;;4983:380;;;:::o;5770:409::-;5972:2;5954:21;;;6011:2;5991:18;;;5984:30;6050:34;6045:2;6030:18;;6023:62;-1:-1:-1;;;6116:2:11;6101:18;;6094:43;6169:3;6154:19;;5770:409::o;6947:496::-;7126:3;7164:6;7158:13;7180:66;7239:6;7234:3;7227:4;7219:6;7215:17;7180:66;:::i;:::-;7309:13;;7268:16;;;;7331:70;7309:13;7268:16;7378:4;7366:17;;7331:70;:::i;:::-;7417:20;;6947:496;-1:-1:-1;;;;6947:496:11:o;7448:401::-;7650:2;7632:21;;;7689:2;7669:18;;;7662:30;7728:34;7723:2;7708:18;;7701:62;-1:-1:-1;;;7794:2:11;7779:18;;7772:35;7839:3;7824:19;;7448:401::o;8613:414::-;8815:2;8797:21;;;8854:2;8834:18;;;8827:30;8893:34;8888:2;8873:18;;8866:62;-1:-1:-1;;;8959:2:11;8944:18;;8937:48;9017:3;9002:19;;8613:414::o;9164:485::-;-1:-1:-1;;;;;9395:32:11;;;9377:51;;9464:32;;9459:2;9444:18;;9437:60;9528:2;9513:18;;9506:34;;;9576:3;9571:2;9556:18;;9549:31;;;-1:-1:-1;;9597:46:11;;9623:19;;9615:6;9597:46;:::i;:::-;9589:54;9164:485;-1:-1:-1;;;;;;9164:485:11:o;9654:249::-;9723:6;9776:2;9764:9;9755:7;9751:23;9747:32;9744:52;;;9792:1;9789;9782:12;9744:52;9824:9;9818:16;9843:30;9867:5;9843:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "841200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4769",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2561",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 11,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17017,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095a36a7c52b73e456315bb2081777fbd6b3798aedcfc83fb9082ced600d11fe964736f6c634300081a0033",
									".code": [
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3947,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3947,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1775,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1775,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1775,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1725,
											"end": 1776,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1725,
											"end": 1776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1715,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1579,
											"end": 1782,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4624,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4624,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4986,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4986,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2977,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2840,
											"end": 3017,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4181,
											"end": 4334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4181,
											"end": 4334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5201,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5201,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4400,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3947,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4057,
											"end": 4064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4042,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4065,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4042,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5611,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5682,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5621,
											"end": 5683,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5759,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5740,
											"end": 5759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3867,
											"end": 3869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3858,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3879,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3858,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4624,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4816,
											"end": 4823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4783,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4824,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4783,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4775,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4775,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4895,
											"end": 4899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4885,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4885,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4986,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5089,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5089,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6388,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6389,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6398,
											"end": 6428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6437,
											"end": 6491,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6184,
											"end": 6532,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6721,
											"end": 6742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6778,
											"end": 6780,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6751,
											"end": 6781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6851,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6797,
											"end": 6815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6790,
											"end": 6852,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6861,
											"end": 6900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6917,
											"end": 6936,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6917,
											"end": 6936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6537,
											"end": 6942,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4326,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4275,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4327,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4275,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5331,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5372,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5331,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5323,
											"end": 5422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5323,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5432,
											"end": 5470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 5470,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5432,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5201,
											"end": 5477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13252,
											"end": 13385,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13252,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6388,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6389,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6398,
											"end": 6428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6437,
											"end": 6491,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6184,
											"end": 6532,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13325,
											"end": 13378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13252,
											"end": 13385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13252,
											"end": 13385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12755,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12584,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12711,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 12658,
											"end": 12682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12711,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12711,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12711,
											"end": 12734,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 12711,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12702,
											"end": 12748,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12584,
											"end": 12755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7416,
											"end": 7677,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7416,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7556,
											"end": 7563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7541,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7564,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7541,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7582,
											"end": 7634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4520,
											"end": 4555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7634,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7602,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7582,
											"end": 7669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7638,
											"end": 7669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7638,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7658,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7638,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7638,
											"end": 7669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7669,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7582,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7670,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7416,
											"end": 7677,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7416,
											"end": 7677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 12472,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 11269,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11366,
											"end": 11397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11381,
											"end": 11388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11366,
											"end": 11389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11366,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11366,
											"end": 11397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11397,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 11358,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11358,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11457,
											"end": 11473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11457,
											"end": 11473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8058,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8038,
											"end": 8059,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8095,
											"end": 8097,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8169,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8178,
											"end": 8212,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7854,
											"end": 8254,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11667,
											"end": 11698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11667,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11682,
											"end": 11689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11667,
											"end": 11681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11667,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11667,
											"end": 11690,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11667,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11667,
											"end": 11698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11667,
											"end": 11698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 11659,
											"end": 11740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11659,
											"end": 11740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12286,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12297,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11802,
											"end": 11833,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12356,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12386,
											"end": 12413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12386,
											"end": 12413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11825,
											"end": 11832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11825,
											"end": 11832,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12386,
											"end": 12413,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12386,
											"end": 12413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12386,
											"end": 12413,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12891,
											"end": 13168,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12891,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13002,
											"end": 13019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13002,
											"end": 13007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13002,
											"end": 13019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13002,
											"end": 13019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8463,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8443,
											"end": 8464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8500,
											"end": 8502,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8503,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8539,
											"end": 8566,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8567,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8259,
											"end": 8608,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12994,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13120,
											"end": 13161,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12891,
											"end": 13168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12891,
											"end": 13168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12891,
											"end": 13168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12891,
											"end": 13168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6338,
											"end": 6605,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6338,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6450,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6478,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6450,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6496,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6519,
											"end": 6523,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6525,
											"end": 6527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6529,
											"end": 6536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6496,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6496,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6496,
											"end": 6543,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6496,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6488,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6488,
											"end": 6598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 974,
											"end": 988,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14106,
											"end": 14119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14106,
											"end": 14119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14102,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14102,
											"end": 14762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14141,
											"end": 14177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14196,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14192,
											"end": 14196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14205,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14211,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14207,
											"end": 14211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 14141,
											"end": 14212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 14141,
											"end": 14212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 14375,
											"end": 14696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 14421,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14696,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 14375,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14648,
											"end": 14654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14642,
											"end": 14655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14625,
											"end": 14640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14618,
											"end": 14656,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 14137,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14262,
											"end": 14313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14262,
											"end": 14313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14262,
											"end": 14313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14255,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14255,
											"end": 14313,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14102,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14102,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14747,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 14768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 14768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1574,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1960,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 1787,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1904,
											"end": 1935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1935,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1894,
											"end": 1936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1894,
											"end": 1936,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 1884,
											"end": 1954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 1954,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 1884,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1960,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1960,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 1960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1965,
											"end": 2265,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1965,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2094,
											"end": 2096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2069,
											"end": 2092,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2097,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2062,
											"end": 2114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2112,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2114,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2062,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2133,
											"end": 2162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2162,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2133,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2235,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2235,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 2265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2270,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2347,
											"end": 2353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2363,
											"end": 2369,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2418,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2402,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2419,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2455,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2484,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2455,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2484,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2537,
											"end": 2539,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2503,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2541,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 2503,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2270,
											"end": 2644,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2270,
											"end": 2644,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2541,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2541,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2270,
											"end": 2644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2835,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2649,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2747,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2736,
											"end": 2759,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2781,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 2729,
											"end": 2781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2767,
											"end": 2779,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2781,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 2729,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2800,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2800,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2800,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3145,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3127,
											"end": 3134,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3166,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 3187,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3216,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3187,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3216,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3319,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3320,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3297,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3279,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3279,
											"end": 3339,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3337,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3279,
											"end": 3339,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3279,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3363,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3501,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 3374,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3435,
											"end": 3445,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3426,
											"end": 3446,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3470,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3456,
											"end": 3471,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 3607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3649,
											"end": 3682,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3685,
											"end": 3697,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 3718,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3747,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3718,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 3766,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3804,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3766,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3804,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3875,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3877,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3877,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3954,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3956,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4015,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3965,
											"end": 4015,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4013,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4015,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3965,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4091,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4079,
											"end": 4092,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4079,
											"end": 4092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4102,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4156,
											"end": 4158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4159,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4174,
											"end": 4180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4224,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4168,
											"end": 4224,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4204,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4256,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4347,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4307,
											"end": 4324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4324,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4334,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4299,
											"end": 4339,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4295,
											"end": 4349,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4283,
											"end": 4350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4283,
											"end": 4350,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4365,
											"end": 4399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4399,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4424,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4447,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4359,
											"end": 4447,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4427,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4558,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4573,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4518,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4633,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4609,
											"end": 4611,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4607,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4597,
											"end": 4612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4584,
											"end": 4634,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4654,
											"end": 4673,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4643,
											"end": 4682,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4707,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 4713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4849,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 4833,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4845,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4818,
											"end": 4850,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4815,
											"end": 4867,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4815,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4815,
											"end": 4867,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4865,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4815,
											"end": 4867,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4815,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4886,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4905,
											"end": 4914,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4886,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 4886,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4886,
											"end": 4915,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4886,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4968,
											"end": 4970,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 4934,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4972,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4934,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5363,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4983,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5126,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5126,
											"end": 5187,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5184,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5185,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5126,
											"end": 5187,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5126,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5236,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5237,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5196,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5196,
											"end": 5357,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5279,
											"end": 5289,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5270,
											"end": 5290,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5291,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5314,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5346,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5196,
											"end": 5357,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5196,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5196,
											"end": 5357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5363,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 6179,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5770,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 5974,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6011,
											"end": 6013,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5984,
											"end": 6014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6050,
											"end": 6084,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6045,
											"end": 6047,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6023,
											"end": 6085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6137,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6154,
											"end": 6173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6154,
											"end": 6173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 6179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 7443,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6947,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7126,
											"end": 7129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7171,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 7239,
											"end": 7245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7237,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7227,
											"end": 7231,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7225,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7215,
											"end": 7232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7180,
											"end": 7246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7246,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 7180,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7309,
											"end": 7322,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7309,
											"end": 7322,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7268,
											"end": 7284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7268,
											"end": 7284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7268,
											"end": 7284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7268,
											"end": 7284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 7309,
											"end": 7322,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7268,
											"end": 7284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7383,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7366,
											"end": 7383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7331,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7401,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 7331,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7417,
											"end": 7437,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7417,
											"end": 7437,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 7443,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6947,
											"end": 7443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7849,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 7448,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7652,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7632,
											"end": 7653,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7632,
											"end": 7653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7632,
											"end": 7653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7689,
											"end": 7691,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7692,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7728,
											"end": 7762,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7723,
											"end": 7725,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7701,
											"end": 7763,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7839,
											"end": 7842,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8613,
											"end": 9027,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 8613,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8815,
											"end": 8817,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8827,
											"end": 8857,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8893,
											"end": 8927,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 8888,
											"end": 8890,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8866,
											"end": 8928,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8959,
											"end": 8961,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8944,
											"end": 8962,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8944,
											"end": 8962,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 8985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9002,
											"end": 9021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8613,
											"end": 9027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9164,
											"end": 9649,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 9164,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9395,
											"end": 9427,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9395,
											"end": 9427,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9497,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9506,
											"end": 9540,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9506,
											"end": 9540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9506,
											"end": 9540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9576,
											"end": 9579,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9571,
											"end": 9573,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9556,
											"end": 9574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9556,
											"end": 9574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9549,
											"end": 9580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9549,
											"end": 9580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9549,
											"end": 9580,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9597,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 9597,
											"end": 9643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9623,
											"end": 9642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9623,
											"end": 9642,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9621,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9597,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 9597,
											"end": 9643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9597,
											"end": 9643,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 9597,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9589,
											"end": 9643,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 9164,
											"end": 9649,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9164,
											"end": 9649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9903,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9654,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9723,
											"end": 9729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9764,
											"end": 9773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9755,
											"end": 9762,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9747,
											"end": 9779,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9744,
											"end": 9796,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9744,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 9744,
											"end": 9796,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9793,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9782,
											"end": 9794,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9744,
											"end": 9796,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 9744,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 9834,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9843,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 9867,
											"end": 9872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9843,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 9843,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xe452d1aa81b3e449e595dbe73d75b90c53dcaedbbde80c88d88058bda32fb32b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cdffd7f666b5fc231365e2cb8575a2b4e04c71f58a343ad0c206bcffdd787d3\",\"dweb:/ipfs/QmWDLKc3YZPHgJx3ohggkoJ6QTje9fc2RG9A2ntn9TmFCh\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220abcda3cabbf446636ec9483cf3ebb66f652b51e748865f532cfc8dd67d5951ef64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abcda3cabbf446636ec9483cf3ebb66f652b51e748865f532cfc8dd67d5951ef64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xCD LOG3 0xCA 0xBB DELEGATECALL CHAINID PUSH4 0x6EC9483C RETURN 0xEB 0xB6 PUSH16 0x652B51E748865F532CFC8DD67D5951EF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abcda3cabbf446636ec9483cf3ebb66f652b51e748865f532cfc8dd67d5951ef64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xCD LOG3 0xCA 0xBB DELEGATECALL CHAINID PUSH4 0x6EC9483C RETURN 0xEB 0xB6 PUSH16 0x652B51E748865F532CFC8DD67D5951EF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abcda3cabbf446636ec9483cf3ebb66f652b51e748865f532cfc8dd67d5951ef64736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a2d3038140b9b76ade43008033fd4e78e75332e48e00010746d79a23f2d2f75964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2d3038140b9b76ade43008033fd4e78e75332e48e00010746d79a23f2d2f75964736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xD3 SUB DUP2 BLOCKHASH 0xB9 0xB7 PUSH11 0xDE43008033FD4E78E75332 0xE4 DUP15 STOP ADD SMOD CHAINID 0xD7 SWAP11 0x23 CALLCODE 0xD2 0xF7 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2d3038140b9b76ade43008033fd4e78e75332e48e00010746d79a23f2d2f75964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xD3 SUB DUP2 BLOCKHASH 0xB9 0xB7 PUSH11 0xDE43008033FD4E78E75332 0xE4 DUP15 STOP ADD SMOD CHAINID 0xD7 SWAP11 0x23 CALLCODE 0xD2 0xF7 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2d3038140b9b76ade43008033fd4e78e75332e48e00010746d79a23f2d2f75964736f6c634300081a0033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220806da8e01b97f73db20a3a04045224884bd04e42e1fbc6af676dd373e059f1fd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806da8e01b97f73db20a3a04045224884bd04e42e1fbc6af676dd373e059f1fd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH14 0xA8E01B97F73DB20A3A0404522488 0x4B 0xD0 0x4E TIMESTAMP 0xE1 0xFB 0xC6 0xAF PUSH8 0x6DD373E059F1FD64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806da8e01b97f73db20a3a04045224884bd04e42e1fbc6af676dd373e059f1fd64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH14 0xA8E01B97F73DB20A3A0404522488 0x4B 0xD0 0x4E TIMESTAMP 0xE1 0xFB 0xC6 0xAF PUSH8 0x6DD373E059F1FD64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220806da8e01b97f73db20a3a04045224884bd04e42e1fbc6af676dd373e059f1fd64736f6c634300081a0033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb59555e1a20f0c2a3827fc2baee381f1f4f02ca434e51cb39c8de12e3a6111064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb59555e1a20f0c2a3827fc2baee381f1f4f02ca434e51cb39c8de12e3a6111064736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB MSIZE SSTORE MCOPY BYTE KECCAK256 CREATE 0xC2 LOG3 DUP3 PUSH32 0xC2BAEE381F1F4F02CA434E51CB39C8DE12E3A6111064736F6C634300081A0033 ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb59555e1a20f0c2a3827fc2baee381f1f4f02ca434e51cb39c8de12e3a6111064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB MSIZE SSTORE MCOPY BYTE KECCAK256 CREATE 0xC2 LOG3 DUP3 PUSH32 0xC2BAEE381F1F4F02CA434E51CB39C8DE12E3A6111064736F6C634300081A0033 ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb59555e1a20f0c2a3827fc2baee381f1f4f02ca434e51cb39c8de12e3a6111064736f6c634300081a0033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1403
						],
						"Context": [
							1425
						],
						"ERC165": [
							1678
						],
						"ERC721": [
							912
						],
						"IERC165": [
							1690
						],
						"IERC721": [
							1028
						],
						"IERC721Metadata": [
							1073
						],
						"IERC721Receiver": [
							1046
						],
						"Math": [
							2556
						],
						"SignedMath": [
							2661
						],
						"Strings": [
							1654
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1029,
							"src": "132:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1047,
							"src": "156:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1074,
							"src": "188:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1404,
							"src": "231:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1426,
							"src": "265:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1655,
							"src": "299:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 1679,
							"src": "333:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"647:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "647:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nameLocations": [
											"656:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1678,
										"src": "656:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nameLocations": [
											"664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1028,
										"src": "664:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "673:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 912,
							"linearizedBaseContracts": [
								912,
								1073,
								1028,
								1678,
								1690,
								1425
							],
							"name": "ERC721",
							"nameLocation": "637:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nameLocations": [
											"701:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "701:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"732:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1654,
										"src": "732:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "776:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "823:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "898:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "992:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "1093:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "1199:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1446:57:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1456:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1464:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1402:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1423:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:0"
									},
									"scope": 912,
									"src": "1390:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1677,
										1689
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1678:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 75,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "1727:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1028_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1028_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 74,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1028",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1763:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 81,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "1783:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1073_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1073_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 80,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1073",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 88,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1851:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 86,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$912_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1677,
															"src": "1827:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 91,
												"nodeType": "Return",
												"src": "1688:175:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1678,
												"src": "1646:6:0"
											},
											{
												"id": 68,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1690,
												"src": "1654:7:0"
											}
										],
										"src": "1637:25:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1597:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:0"
									},
									"scope": 912,
									"src": "1570:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2010:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2028:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 112,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2110:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"id": 113,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2120:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 115,
												"nodeType": "Return",
												"src": "2103:23:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:0"
									},
									"scope": 912,
									"src": "1929:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2271:138:0",
										"statements": [
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2281:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"arguments": [
														{
															"id": 129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "2297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:0"
											},
											{
												"expression": {
													"id": 142,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "2397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 125,
												"id": 143,
												"nodeType": "Return",
												"src": "2390:12:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:0"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:0"
									},
									"scope": 912,
									"src": "2190:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1058
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2540:29:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "2550:12:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2525:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:0"
									},
									"scope": 912,
									"src": "2471:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1064
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2704:31:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "2714:14:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2689:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:0"
									},
									"scope": 912,
									"src": "2633:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1072
									],
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2889:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 174,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "2899:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "2933:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 178,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 180,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2957:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 185,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "2990:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 183,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 194,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3036:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 195,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3045:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1484,
																			"src": "3045:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 192,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 190,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 202,
												"nodeType": "Return",
												"src": "2977:93:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2874:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:0"
									},
									"scope": 912,
									"src": "2801:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3385:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "3395:9:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3370:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:0"
									},
									"scope": 912,
									"src": "3319:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3538:348:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "3548:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 224,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "3564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3564:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 230,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "3605:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 231,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "3611:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3867:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "3858:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "3858:21:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:0"
									},
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3485:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:0"
									},
									"scope": 912,
									"src": "3468:418:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "4032:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "4042:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "4042:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 255,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4083:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 257,
													"indexExpression": {
														"id": 256,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "4099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4083:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 250,
												"id": 258,
												"nodeType": "Return",
												"src": "4076:31:0"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3892:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3956:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 247,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4005:8:0"
									},
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3976:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3968:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:17:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:9:0"
									},
									"scope": 912,
									"src": "3947:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "4265:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 270,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "4294:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4294:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4308:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 269,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "4275:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4275:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4275:52:0"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "4120:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4190:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4256:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4216:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4208:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4231:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4207:33:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4265:0:0"
									},
									"scope": 912,
									"src": "4181:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "4503:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 288,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4520:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 290,
														"indexExpression": {
															"id": 289,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4520:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 292,
													"indexExpression": {
														"id": 291,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "4546:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4520:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 287,
												"id": 293,
												"nodeType": "Return",
												"src": "4513:42:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4340:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4409:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 284,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4479:8:0"
									},
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4434:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4426:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4449:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4441:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:33:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4497:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4497:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4496:6:0"
									},
									"scope": 912,
									"src": "4400:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										993
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "4713:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 308,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "4802:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4802:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 310,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "4816:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 307,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "4783:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4783:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4826:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4775:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "4775:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4895:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4901:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "4885:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4885:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "4885:28:0"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4568:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4633:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 304,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4704:8:0"
									},
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4654:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4668:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4660:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4680:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4672:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4645:43:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 912,
									"src": "4624:296:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										983
									],
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5079:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5112:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "5116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5125:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 333,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															341,
															371
														],
														"referencedDeclaration": 371,
														"src": "5089:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5089:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "5089:39:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "4926:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4995:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5070:8:0"
									},
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5034:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5026:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5046:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5038:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5079:0:0"
									},
									"scope": 912,
									"src": "4986:149:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										973
									],
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "5313:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 356,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "5350:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5350:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 358,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "5364:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 355,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "5331:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5331:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5374:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5323:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5323:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5446:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5452:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 367,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5465:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 363,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "5432:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5432:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "5432:38:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5141:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5210:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5304:8:0"
									},
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5227:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5249:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5241:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5261:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5253:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5283:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5270:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5270:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:62:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5313:0:0"
									},
									"scope": 912,
									"src": "5201:276:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "6440:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6466:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "6450:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6450:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "6450:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 391,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "6519:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 392,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "6525:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 393,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "6529:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 394,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6538:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 390,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "6496:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6496:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6545:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6488:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "6488:110:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "5483:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6347:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6369:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "6361:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6383:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "6375:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6395:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "6387:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6417:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "6404:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6404:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6360:62:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6440:0:0"
									},
									"scope": 912,
									"src": "6338:267:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "6789:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "6814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6806:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 407,
												"id": 411,
												"nodeType": "Return",
												"src": "6799:23:0"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "6611:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6723:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "6732:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6731:17:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "6780:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:9:0"
									},
									"scope": 912,
									"src": "6714:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "7203:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 422,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "7229:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 421,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7220:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7220:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7249:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 424,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7241:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7241:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7220:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 420,
												"id": 429,
												"nodeType": "Return",
												"src": "7213:38:0"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "6835:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7141:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7157:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "7149:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7148:17:0"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "7197:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7196:6:0"
									},
									"scope": 912,
									"src": "7132:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "7515:162:0",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7533:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "7525:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 441,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7525:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"id": 445,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "7556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 443,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "7541:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7548:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "7541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7541:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7525:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 448,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "7582:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 449,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "7593:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7582:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 452,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "7619:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 453,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7626:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 451,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "7602:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7602:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7582:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 457,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "7650:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 456,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7638:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7638:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 459,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "7662:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7638:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7582:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 462,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7581:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 440,
												"id": 463,
												"nodeType": "Return",
												"src": "7574:96:0"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "7264:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7425:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7452:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7444:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7469:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7461:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7443:34:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7509:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7508:6:0"
									},
									"scope": 912,
									"src": "7416:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "8072:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "8092:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "8096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8105:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 473,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															480,
															509
														],
														"referencedDeclaration": 509,
														"src": "8082:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "8082:26:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "7683:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8016:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8034:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "8026:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8046:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "8038:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8025:29:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8072:0:0"
									},
									"scope": 912,
									"src": "8007:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "8420:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "8436:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "8440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "8430:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8430:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "8430:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8510:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8502:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 497,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8502:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8502:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 501,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "8514:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "8518:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 503,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "8527:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 496,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "8479:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8479:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8546:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8458:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "8458:150:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "8121:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8345:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8363:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8355:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8375:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8397:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8384:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8384:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8354:48:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8420:0:0"
									},
									"scope": 912,
									"src": "8336:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "8998:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9016:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9030:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9022:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9022:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9016:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9034:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9008:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "9008:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9087:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 529,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "9096:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 528,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9088:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9088:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9106:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9079:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "9079:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9177:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9169:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9169:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9169:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9181:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9194:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 535,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9148:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9148:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "9148:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9291:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "9300:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 546,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9292:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9292:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9310:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9283:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "9283:58:0"
											},
											{
												"id": 559,
												"nodeType": "UncheckedBlock",
												"src": "9352:360:0",
												"statements": [
													{
														"expression": {
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 553,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9683:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 555,
																"indexExpression": {
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9693:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9683:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9700:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9683:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 558,
														"nodeType": "ExpressionStatement",
														"src": "9683:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 560,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "9722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9722:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9741:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9722:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "9722:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9776:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9768:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9768:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9768:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 566,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "9759:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9759:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "9754:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9831:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9823:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9823:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9823:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9835:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9848:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 575,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "9803:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9803:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "9803:47:0"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "8621:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8946:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8960:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "8952:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8972:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "8964:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8951:29:0"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8998:0:0"
									},
									"scope": 912,
									"src": "8937:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "10232:713:0",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10250:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "10242:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 592,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10242:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"arguments": [
														{
															"id": 596,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 594,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "10258:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10265:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "10258:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10258:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10242:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10313:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10320:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10320:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10341:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 599,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "10292:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10292:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "10292:51:0"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 609,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "10445:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 612,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "10468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 610,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "10453:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10460:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 145,
															"src": "10453:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10453:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10445:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "10445:31:0"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10514:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 616,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "10521:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 618,
														"indexExpression": {
															"id": 617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10521:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "10514:31:0"
											},
											{
												"id": 627,
												"nodeType": "UncheckedBlock",
												"src": "10556:237:0",
												"statements": [
													{
														"expression": {
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 621,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10761:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 622,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "10771:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10761:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10761:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 626,
														"nodeType": "ExpressionStatement",
														"src": "10761:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10802:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 628,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 630,
														"indexExpression": {
															"id": 629,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10809:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "10802:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 635,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10857:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10857:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "10841:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10841:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "EmitStatement",
												"src": "10836:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10908:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10923:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10915:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10915:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10927:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10936:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 642,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "10888:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10888:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "10888:50:0"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "9863:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10192:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10206:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "10198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10197:17:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:0:0"
									},
									"scope": 912,
									"src": "10183:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "11348:1124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 666,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "11381:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 664,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "11366:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11373:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11366:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11366:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 668,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "11393:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11366:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11399:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11358:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "11358:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "11457:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11471:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11463:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11463:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11463:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11457:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11475:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11449:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11449:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "11449:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 684,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "11546:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "11552:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "11556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11565:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 683,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "11525:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11525:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "11525:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "11682:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 691,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "11667:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11674:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11667:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11667:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 695,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "11694:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11667:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11700:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11659:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "11659:81:0"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11802:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 700,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "11809:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 702,
														"indexExpression": {
															"id": 701,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "11825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11809:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "11802:31:0"
											},
											{
												"id": 717,
												"nodeType": "UncheckedBlock",
												"src": "11844:496:0",
												"statements": [
													{
														"expression": {
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 705,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12277:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 707,
																"indexExpression": {
																	"id": 706,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "12287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12277:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12277:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 710,
														"nodeType": "ExpressionStatement",
														"src": "12277:20:0"
													},
													{
														"expression": {
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 711,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12311:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 713,
																"indexExpression": {
																	"id": 712,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "12321:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12311:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12328:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12311:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 716,
														"nodeType": "ExpressionStatement",
														"src": "12311:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 718,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "12349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 720,
														"indexExpression": {
															"id": 719,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "12357:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12349:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 721,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "12368:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12349:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "12349:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "12395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "12401:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "12405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "12386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12386:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "EmitStatement",
												"src": "12381:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "12444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "12450:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "12454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 730,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "12424:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12424:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "12424:41:0"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "10951:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11278:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11296:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "11288:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11310:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "11302:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "11314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11287:43:0"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11348:0:0"
									},
									"scope": 912,
									"src": "11269:1203:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "12648:107:0",
										"statements": [
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 746,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "12658:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 748,
														"indexExpression": {
															"id": 747,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "12674:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12658:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 749,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "12685:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12658:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "12658:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 755,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "12726:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 753,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "12711:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$912_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "12711:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12711:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "12736:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "12740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "12702:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12702:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "EmitStatement",
												"src": "12697:51:0"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "12478:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12593:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12610:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "12602:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12622:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "12614:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12601:29:0"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12648:0:0"
									},
									"scope": 912,
									"src": "12584:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "12984:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "13002:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 774,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "13011:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13002:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13021:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12994:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "12994:55:0"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 779,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "13059:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 782,
															"indexExpression": {
																"id": 780,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "13078:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13059:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 783,
														"indexExpression": {
															"id": 781,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "13085:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13059:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 784,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "13097:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13059:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "13059:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 788,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "13135:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "13142:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "13152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 787,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "13120:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13120:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "EmitStatement",
												"src": "13115:46:0"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "12761:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12900:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "12919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12942:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "12934:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12957:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "12952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12918:48:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12984:0:0"
									},
									"scope": 912,
									"src": "12891:277:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "13315:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 802,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "13341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 801,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "13333:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13333:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13351:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13325:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "13325:53:0"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "13174:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13261:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "13276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13275:17:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13315:0:0"
									},
									"scope": 912,
									"src": "13252:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "14092:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 822,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "14106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14109:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1091,
														"src": "14106:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14106:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "14726:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14747:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 821,
															"id": 866,
															"nodeType": "Return",
															"src": "14740:11:0"
														}
													]
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "14102:660:0",
												"trueBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "14123:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 844,
																		"nodeType": "Block",
																		"src": "14237:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 842,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 838,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 836,
																						"src": "14262:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 839,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1046,
																								"src": "14272:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1046_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 840,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14288:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1045,
																							"src": "14272:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14305:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14272:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14262:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 821,
																				"id": 843,
																				"nodeType": "Return",
																				"src": "14255:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 845,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 837,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 836,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14229:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 845,
																				"src": "14222:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 835,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14222:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14221:15:0"
																	},
																	"src": "14213:115:0"
																},
																{
																	"block": {
																		"id": 861,
																		"nodeType": "Block",
																		"src": "14357:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 849,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 847,
																							"src": "14379:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 850,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14386:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14379:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14396:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14379:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 859,
																					"nodeType": "Block",
																					"src": "14506:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14592:86:0",
																								"nodeType": "YulBlock",
																								"src": "14592:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14629:2:0",
																															"nodeType": "YulLiteral",
																															"src": "14629:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14633:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14633:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14625:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "14625:3:0"
																													},
																													"nativeSrc": "14625:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14625:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14648:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14648:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14642:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "14642:5:0"
																													},
																													"nativeSrc": "14642:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14642:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14618:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "14618:6:0"
																											},
																											"nativeSrc": "14618:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "14618:38:0"
																										},
																										"nativeSrc": "14618:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "14618:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 847,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14633:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 847,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14648:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 858,
																							"nodeType": "InlineAssembly",
																							"src": "14583:95:0"
																						}
																					]
																				},
																				"id": 860,
																				"nodeType": "IfStatement",
																				"src": "14375:321:0",
																				"trueBody": {
																					"id": 857,
																					"nodeType": "Block",
																					"src": "14399:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 854,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14428:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 853,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14421:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 855,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14421:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 856,
																							"nodeType": "ExpressionStatement",
																							"src": "14421:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 862,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 848,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 847,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14349:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 862,
																				"src": "14336:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 846,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14335:21:0"
																	},
																	"src": "14329:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 829,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "14178:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14178:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 831,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "14192:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 832,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "14198:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 833,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "14207:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 826,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 813,
																				"src": "14157:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 825,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "14141:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1046_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14141:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1046",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14161:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1045,
																	"src": "14141:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14141:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 863,
															"nodeType": "TryStatement",
															"src": "14137:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "13391:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13946:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13986:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "13978:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14008:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "14000:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14028:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "14020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14058:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "14045:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13968:100:0"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "14086:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14086:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14085:6:0"
									},
									"scope": 912,
									"src": "13937:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "15598:2:0",
										"statements": []
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "14774:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15493:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15522:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "15514:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15536:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "15528:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15548:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "15540:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15570:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "15562:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15513:67:0"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15598:0:0"
									},
									"scope": 912,
									"src": "15484:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "16419:2:0",
										"statements": []
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "15606:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16315:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16343:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16335:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16357:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16349:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16369:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16361:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16391:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16383:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16334:67:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16419:0:0"
									},
									"scope": 912,
									"src": "16306:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "16970:45:0",
										"statements": [
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 904,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "16980:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 906,
														"indexExpression": {
															"id": 905,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "16990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16980:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 907,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "17002:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16980:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "16980:28:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "16427:409:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16903:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "16928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16953:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "16945:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16927:33:0"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16970:0:0"
									},
									"scope": 912,
									"src": "16894:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 913,
							"src": "628:16389:0",
							"usedErrors": [],
							"usedEvents": [
								927,
								936,
								945
							]
						}
					],
					"src": "107:16911:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1690
						],
						"IERC721": [
							1028
						]
					},
					"id": 1029,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1029,
							"sourceUnit": 1691,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1690,
										"src": "271:7:1"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1028,
							"linearizedBaseContracts": [
								1028,
								1690
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 927,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 936,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 945,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 1028,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 1028,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "1835:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "1849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "1861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "1878:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:1"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:1"
									},
									"scope": 1028,
									"src": "1809:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2632:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2646:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:1"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:1"
									},
									"scope": 1028,
									"src": "2606:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "3475:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:1"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:1"
									},
									"scope": 1028,
									"src": "3427:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3981:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3993:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:1"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:1"
									},
									"scope": 1028,
									"src": "3964:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4366:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:1"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:1"
									},
									"scope": 1028,
									"src": "4339:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "4579:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:1"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "4619:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:1"
									},
									"scope": 1028,
									"src": "4558:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "4812:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "4827:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:1"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "4868:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:1"
									},
									"scope": 1028,
									"src": "4786:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1029,
							"src": "250:4626:1",
							"usedErrors": [],
							"usedEvents": [
								927,
								936,
								945
							]
						}
					],
					"src": "108:4769:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1046
						]
					},
					"id": 1047,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1030,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1031,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1046,
							"linearizedBaseContracts": [
								1046
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 1046,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1047,
							"src": "294:692:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1690
						],
						"IERC721": [
							1028
						],
						"IERC721Metadata": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1048,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 1029,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1051,
										"name": "IERC721",
										"nameLocations": [
											"326:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1028,
										"src": "326:7:3"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1050,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1073,
							"linearizedBaseContracts": [
								1073,
								1028,
								1690
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 1073,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 1073,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1069,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 1073,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1074,
							"src": "297:463:3",
							"usedErrors": [],
							"usedEvents": [
								927,
								936,
								945
							]
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1403
						]
					},
					"id": 1404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1076,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1084,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1089,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 1403,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "2718:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1102,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1403",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1403",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1100,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1105,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "2761:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:4"
											},
											{
												"assignments": [
													1111,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "2813:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1110,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1118,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1112,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "2831:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1114,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:4"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2666:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:4"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:4"
									},
									"scope": 1403,
									"src": "2647:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "3790:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "3837:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1135,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1183,
															1227
														],
														"referencedDeclaration": 1227,
														"src": "3807:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1141,
												"nodeType": "Return",
												"src": "3800:79:4"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3723:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3739:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:4"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:4"
									},
									"scope": 1403,
									"src": "3701:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "4255:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1156,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "4294:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "4302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1159,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "4311:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1155,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1183,
															1227
														],
														"referencedDeclaration": 1227,
														"src": "4272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1161,
												"nodeType": "Return",
												"src": "4265:59:4"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "4190:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:4"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "4241:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:4"
									},
									"scope": 1403,
									"src": "4108:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "4806:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "4845:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1178,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "4859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1175,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1183,
															1227
														],
														"referencedDeclaration": 1227,
														"src": "4823:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1181,
												"nodeType": "Return",
												"src": "4816:94:4"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4759:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:4"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4792:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1172,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:4"
									},
									"scope": 1403,
									"src": "4693:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "5344:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1200,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1403",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1403",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1198,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1203,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "5387:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:4"
											},
											{
												"assignments": [
													1209,
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "5446:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1208,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "5460:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1210,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [
														{
															"id": 1216,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "5513:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1212,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "5487:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1214,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "5506:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "5562:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "5570:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1222,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5579:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1223,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "5591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1219,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "5535:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1196,
												"id": 1225,
												"nodeType": "Return",
												"src": "5528:76:4"
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5205:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5229:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5256:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5279:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:4"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5330:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:4"
									},
									"scope": 1403,
									"src": "5165:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "5888:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "5924:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "5932:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1237,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1273
														],
														"referencedDeclaration": 1273,
														"src": "5905:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1242,
												"nodeType": "Return",
												"src": "5898:80:4"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5816:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5832:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:4"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5874:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:4"
									},
									"scope": 1403,
									"src": "5788:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "6327:168:4",
										"statements": [
											{
												"assignments": [
													1257,
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1257,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "6338:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1256,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "6352:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1258,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"arguments": [
														{
															"id": 1262,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "6397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1260,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "6379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "6446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "6454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1268,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "6463:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1269,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6475:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1265,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "6419:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1271,
												"nodeType": "Return",
												"src": "6412:76:4"
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6257:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:4"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6313:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:4"
									},
									"scope": 1403,
									"src": "6169:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "6771:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "6809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "6817:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1283,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1290,
															1319
														],
														"referencedDeclaration": 1319,
														"src": "6788:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1288,
												"nodeType": "Return",
												"src": "6781:84:4"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6720:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:4"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6757:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:4"
									},
									"scope": 1403,
									"src": "6674:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "7213:170:4",
										"statements": [
											{
												"assignments": [
													1303,
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "7224:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "7238:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1304,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "7285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1306,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "7265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "7342:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "7351:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "7363:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1311,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "7307:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1317,
												"nodeType": "Return",
												"src": "7300:76:4"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "7097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "7121:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "7148:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:4"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 1403,
									"src": "7058:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "7865:434:4",
										"statements": [
											{
												"condition": {
													"id": 1333,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1324,
													"src": "7879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "8235:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1351,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "8257:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1352,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "8269:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1350,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "8249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1354,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:4"
														}
													]
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "7875:418:4",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "7888:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1334,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "7906:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1346,
															"nodeType": "IfStatement",
															"src": "7902:286:4",
															"trueBody": {
																"id": 1345,
																"nodeType": "Block",
																"src": "7930:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1340,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1322,
																							"src": "8132:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1339,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1091,
																						"src": "8121:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1338,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1344,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1347,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "8208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1332,
															"id": 1348,
															"nodeType": "Return",
															"src": "8201:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7716:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7740:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7762:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7795:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1327,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:4"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7851:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:4"
									},
									"scope": 1403,
									"src": "7671:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "8680:135:4",
										"statements": [
											{
												"condition": {
													"id": 1370,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "8694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1379,
													"nodeType": "Block",
													"src": "8751:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1375,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "8773:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1376,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "8785:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1374,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "8765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1378,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:4"
														}
													]
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "8690:119:4",
												"trueBody": {
													"id": 1373,
													"nodeType": "Block",
													"src": "8703:42:4",
													"statements": [
														{
															"expression": {
																"id": 1371,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "8724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1372,
															"nodeType": "Return",
															"src": "8717:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8555:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:4"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8666:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:4"
									},
									"scope": 1403,
									"src": "8520:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "8904:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1389,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "8980:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "9310:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1396,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "9331:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1395,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:4"
														}
													]
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "8976:379:4",
												"trueBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "9003:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:4",
																"nodeType": "YulBlock",
																"src": "9161:133:4",
																"statements": [
																	{
																		"nativeSrc": "9179:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:4"
																			},
																			"nativeSrc": "9202:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:4",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:4"
																					},
																					"nativeSrc": "9243:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:4"
																			},
																			"nativeSrc": "9236:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:4"
																		},
																		"nativeSrc": "9236:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1384,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1384,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:4",
																	"valueSize": 1
																}
															],
															"id": 1393,
															"nodeType": "InlineAssembly",
															"src": "9152:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "8838:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "8863:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:4"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:4"
									},
									"scope": 1403,
									"src": "8821:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1404,
							"src": "194:9169:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:4"
				},
				"id": 4
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1425
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1406,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1411,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1413,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1425,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1420,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1422,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1425,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1426,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2556
						],
						"SignedMath": [
							2661
						],
						"Strings": [
							1654
						]
					},
					"id": 1655,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 2557,
							"src": "126:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 2662,
							"src": "152:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1430,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1654,
							"linearizedBaseContracts": [
								1654
							],
							"name": "Strings",
							"nameLocation": "228:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1433,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1654,
									"src": "242:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1431,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1436,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1654,
									"src": "302:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1434,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "518:625:6",
										"statements": [
											{
												"id": 1482,
												"nodeType": "UncheckedBlock",
												"src": "528:609:6",
												"statements": [
													{
														"assignments": [
															1445
														],
														"declarations": [
															{
																"constant": false,
																"id": 1445,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1482,
																"src": "552:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1444,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1452,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1448,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "580:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1446,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2556,
																		"src": "569:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2556_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2393,
																	"src": "569:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:6"
													},
													{
														"assignments": [
															1454
														],
														"declarations": [
															{
																"constant": false,
																"id": 1454,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1482,
																"src": "604:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1453,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1459,
														"initialValue": {
															"arguments": [
																{
																	"id": 1457,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "638:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1455,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:6"
													},
													{
														"assignments": [
															1461
														],
														"declarations": [
															{
																"constant": false,
																"id": 1461,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1482,
																"src": "659:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1460,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1462,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:6"
													},
													{
														"AST": {
															"nativeSrc": "740:67:6",
															"nodeType": "YulBlock",
															"src": "740:67:6",
															"statements": [
																{
																	"nativeSrc": "758:35:6",
																	"nodeType": "YulAssignment",
																	"src": "758:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:6",
																						"nodeType": "YulLiteral",
																						"src": "781:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:6"
																				},
																				"nativeSrc": "777:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:6"
																		},
																		"nativeSrc": "765:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1454,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1445,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1461,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:6",
																"valueSize": 1
															}
														],
														"id": 1463,
														"nodeType": "InlineAssembly",
														"src": "731:76:6"
													},
													{
														"body": {
															"id": 1478,
															"nodeType": "Block",
															"src": "833:267:6",
															"statements": [
																{
																	"expression": {
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:6",
																		"subExpression": {
																			"id": 1465,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "851:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1467,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:6",
																		"nodeType": "YulBlock",
																		"src": "934:84:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:6",
																											"nodeType": "YulLiteral",
																											"src": "985:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:6"
																									},
																									"nativeSrc": "974:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:6",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:6"
																							},
																							"nativeSrc": "969:30:6",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:6"
																					},
																					"nativeSrc": "956:44:6",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:6"
																				},
																				"nativeSrc": "956:44:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1433,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1461,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1439,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1468,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:6"
																},
																{
																	"expression": {
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "1035:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1472,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1473,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "1068:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1477,
																	"nodeType": "IfStatement",
																	"src": "1064:21:6",
																	"trueBody": {
																		"id": 1476,
																		"nodeType": "Break",
																		"src": "1080:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1479,
														"nodeType": "WhileStatement",
														"src": "820:280:6"
													},
													{
														"expression": {
															"id": 1480,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "1120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1443,
														"id": 1481,
														"nodeType": "Return",
														"src": "1113:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:6"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "503:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:6"
									},
									"scope": 1654,
									"src": "447:696:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "1313:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1487,
																			"src": "1354:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:6",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1505,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "1400:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1503,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2661,
																					"src": "1385:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2661_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:6",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2660,
																				"src": "1385:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1502,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1484,
																			1512
																		],
																		"referencedDeclaration": 1484,
																		"src": "1376:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1492,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1510,
												"nodeType": "Return",
												"src": "1323:86:6"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1261:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1486,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:6"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1298:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:6"
									},
									"scope": 1654,
									"src": "1243:173:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "1595:100:6",
										"statements": [
											{
												"id": 1530,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1524,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "1667:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1522,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2556,
																				"src": "1655:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2556_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2516,
																			"src": "1655:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1520,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1532,
																	1608,
																	1628
																],
																"referencedDeclaration": 1608,
																"src": "1636:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1519,
														"id": 1529,
														"nodeType": "Return",
														"src": "1629:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:6"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1580:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:6"
									},
									"scope": 1654,
									"src": "1521:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "1908:347:6",
										"statements": [
											{
												"assignments": [
													1543
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "1918:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1542,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1547,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "1954:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1544,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:6"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1553,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "1975:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1555,
														"indexExpression": {
															"hexValue": "30",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:6"
											},
											{
												"expression": {
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1559,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "2000:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1561,
														"indexExpression": {
															"hexValue": "31",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:6"
											},
											{
												"body": {
													"id": 1593,
													"nodeType": "Block",
													"src": "2070:83:6",
													"statements": [
														{
															"expression": {
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1579,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "2084:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1581,
																	"indexExpression": {
																		"id": 1580,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "2091:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1582,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "2096:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1586,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "2105:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:6"
														},
														{
															"expression": {
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "2131:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1573,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2058:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1594,
												"initializationExpression": {
													"assignments": [
														1566
													],
													"declarations": [
														{
															"constant": false,
															"id": 1566,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1594,
															"src": "2030:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1565,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1572,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1568,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "2046:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:6",
														"subExpression": {
															"id": 1576,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "2067:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1578,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1596,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "2170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "2241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1602,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1606,
												"nodeType": "Return",
												"src": "2227:21:6"
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "1839:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "1854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:6"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "1893:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:6"
									},
									"scope": 1654,
									"src": "1818:437:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "2480:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1621,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "2525:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1619,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1617,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1624,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "2533:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1616,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1532,
															1608,
															1628
														],
														"referencedDeclaration": 1608,
														"src": "2497:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1615,
												"id": 1626,
												"nodeType": "Return",
												"src": "2490:59:6"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2428:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:6"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"scope": 1654,
									"src": "2407:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "2711:66:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1641,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "2744:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1638,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1647,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "2767:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1645,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1644,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1651,
												"nodeType": "Return",
												"src": "2721:49:6"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2648:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2665:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:6"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2705:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:6"
									},
									"scope": 1654,
									"src": "2633:144:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1655,
							"src": "220:2559:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:6"
				},
				"id": 6
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1678
						],
						"IERC165": [
							1690
						]
					},
					"id": 1679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1691,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1659,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1690,
										"src": "754:7:7"
									},
									"id": 1660,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1658,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1678,
							"linearizedBaseContracts": [
								1678,
								1690
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1689
									],
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1669,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1671,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1690_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1690_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1670,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1690",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1675,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1665,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1678,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1679,
							"src": "726:260:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1690
						]
					},
					"id": 1691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1681,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1690,
							"linearizedBaseContracts": [
								1690
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1690,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1691,
							"src": "405:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2556
						]
					},
					"id": 2557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1693,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2556,
							"linearizedBaseContracts": [
								2556
							],
							"name": "Math",
							"nameLocation": "210:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1697,
									"members": [
										{
											"id": 1694,
											"name": "Down",
											"nameLocation": "245:4:9",
											"nodeType": "EnumValue",
											"src": "245:4:9"
										},
										{
											"id": 1695,
											"name": "Up",
											"nameLocation": "287:2:9",
											"nodeType": "EnumValue",
											"src": "287:2:9"
										},
										{
											"id": 1696,
											"name": "Zero",
											"nameLocation": "318:4:9",
											"nodeType": "EnumValue",
											"src": "318:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:9",
									"nodeType": "EnumDefinition",
									"src": "221:122:9"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "480:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1707,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1708,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "501:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1711,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "509:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:9",
													"trueExpression": {
														"id": 1710,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1713,
												"nodeType": "Return",
												"src": "490:20:9"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "426:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:9"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "471:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:9"
									},
									"scope": 2556,
									"src": "413:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "655:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1725,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1726,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1729,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:9",
													"trueExpression": {
														"id": 1728,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "680:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1731,
												"nodeType": "Return",
												"src": "665:20:9"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "646:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:9"
									},
									"scope": 2556,
									"src": "588:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "876:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1743,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1744,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "935:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1746,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1747,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "941:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1750,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1754,
												"nodeType": "Return",
												"src": "923:28:9"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "822:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:9"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "867:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:9"
									},
									"scope": 2556,
									"src": "805:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "1228:123:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1766,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "1316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1770,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "1330:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "1339:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1779,
												"nodeType": "Return",
												"src": "1309:35:9"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1174:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1185:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:9"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 2556,
									"src": "1157:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "1765:4115:9",
										"statements": [
											{
												"id": 1902,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:9",
												"statements": [
													{
														"assignments": [
															1794
														],
														"declarations": [
															{
																"constant": false,
																"id": 1794,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "2096:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1795,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:9"
													},
													{
														"assignments": [
															1797
														],
														"declarations": [
															{
																"constant": false,
																"id": 1797,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "2168:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1796,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1798,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:9"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:9",
															"nodeType": "YulBlock",
															"src": "2248:157:9",
															"statements": [
																{
																	"nativeSrc": "2266:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:9"
																				},
																				"nativeSrc": "2289:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:9"
																		},
																		"nativeSrc": "2276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:9",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:9",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nativeSrc": "2322:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:9",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:9"
																				},
																				"nativeSrc": "2361:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:9"
																				},
																				"nativeSrc": "2377:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:9"
																		},
																		"nativeSrc": "2357:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1797,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1786,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1786,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:9",
																"valueSize": 1
															}
														],
														"id": 1799,
														"nodeType": "InlineAssembly",
														"src": "2239:166:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1800,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "2486:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1808,
														"nodeType": "IfStatement",
														"src": "2482:368:9",
														"trueBody": {
															"id": 1807,
															"nodeType": "Block",
															"src": "2498:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1803,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "2816:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1804,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "2824:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1792,
																	"id": 1806,
																	"nodeType": "Return",
																	"src": "2809:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "2960:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1811,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "2974:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1809,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1815,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:9"
													},
													{
														"assignments": [
															1817
														],
														"declarations": [
															{
																"constant": false,
																"id": 1817,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "3261:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1816,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1818,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:9"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:9",
															"nodeType": "YulBlock",
															"src": "3301:291:9",
															"statements": [
																{
																	"nativeSrc": "3370:38:9",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:9"
																		},
																		"nativeSrc": "3383:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:9",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:9"
																				},
																				"nativeSrc": "3510:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:9"
																		},
																		"nativeSrc": "3499:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:9",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:9"
																		},
																		"nativeSrc": "3557:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1797,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1797,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1786,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:9",
																"valueSize": 1
															}
														],
														"id": 1819,
														"nodeType": "InlineAssembly",
														"src": "3292:300:9"
													},
													{
														"assignments": [
															1821
														],
														"declarations": [
															{
																"constant": false,
																"id": 1821,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "3899:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1829,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "3914:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:9",
																			"subExpression": {
																				"id": 1823,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1788,
																				"src": "3930:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:9"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:9",
															"nodeType": "YulBlock",
															"src": "3969:362:9",
															"statements": [
																{
																	"nativeSrc": "4034:37:9",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:9"
																		},
																		"nativeSrc": "4049:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:9",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:9"
																		},
																		"nativeSrc": "4147:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:9",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:9"
																						},
																						"nativeSrc": "4294:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:9"
																				},
																				"nativeSrc": "4290:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:9"
																		},
																		"nativeSrc": "4286:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:9",
																"valueSize": 1
															}
														],
														"id": 1830,
														"nodeType": "InlineAssembly",
														"src": "3960:371:9"
													},
													{
														"expression": {
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1831,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "4397:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1832,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "4406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1833,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "4414:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1836,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:9"
													},
													{
														"assignments": [
															1838
														],
														"declarations": [
															{
																"constant": false,
																"id": 1838,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "4736:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1837,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1845,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1840,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "4759:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:9"
													},
													{
														"expression": {
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1846,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "4992:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5007:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1849,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5021:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1853,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:9"
													},
													{
														"expression": {
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1854,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5061:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1856,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5076:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1857,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5090:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1861,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:9"
													},
													{
														"expression": {
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1862,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5131:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1864,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5146:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1865,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5160:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1869,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:9"
													},
													{
														"expression": {
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1870,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5201:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1872,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5216:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1873,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5230:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1877,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:9"
													},
													{
														"expression": {
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5271:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5286:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5300:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1885,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:9"
													},
													{
														"expression": {
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5342:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5357:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5371:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1893,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:9"
													},
													{
														"expression": {
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1894,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "5812:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1895,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "5821:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1896,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "5829:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1899,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:9"
													},
													{
														"expression": {
															"id": 1900,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "5857:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1792,
														"id": 1901,
														"nodeType": "Return",
														"src": "5850:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1683:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1694:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1705:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:9"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1749:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:9"
									},
									"scope": 2556,
									"src": "1667:4213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "6122:189:9",
										"statements": [
											{
												"assignments": [
													1920
												],
												"declarations": [
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "6132:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1926,
												"initialValue": {
													"arguments": [
														{
															"id": 1922,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "6156:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1923,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "6159:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1924,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "6162:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1904,
															1948
														],
														"referencedDeclaration": 1904,
														"src": "6149:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1697",
															"typeString": "enum Math.Rounding"
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1927,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "6188:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1697",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1928,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "6200:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1695,
															"src": "6200:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1697",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1932,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "6222:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1933,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "6225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1934,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "6228:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1931,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "6184:98:9",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "6246:36:9",
													"statements": [
														{
															"expression": {
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1939,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "6260:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1942,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1920,
													"src": "6298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1946,
												"nodeType": "Return",
												"src": "6291:13:9"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6028:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6039:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6050:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6071:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1912,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "6071:8:9"
													},
													"referencedDeclaration": 1697,
													"src": "6071:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:9"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6113:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:9"
									},
									"scope": 2556,
									"src": "6012:299:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "6587:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "6601:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "6597:45:9",
												"trueBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "6609:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1955,
															"id": 1960,
															"nodeType": "Return",
															"src": "6623:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1964
												],
												"declarations": [
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2059,
														"src": "7321:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1973,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1967,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1951,
																			"src": "7349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1966,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2228,
																			2264
																		],
																		"referencedDeclaration": 2228,
																		"src": "7344:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:9"
											},
											{
												"id": 2058,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:9",
												"statements": [
													{
														"expression": {
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1974,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7782:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1975,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7792:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1976,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7801:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1977,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7805:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1984,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:9"
													},
													{
														"expression": {
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7831:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1986,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7841:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1987,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7850:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1988,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7854:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1991,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1995,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:9"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7880:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1997,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7890:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1998,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7899:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1999,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7903:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:9"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7929:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2008,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7939:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2009,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7948:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7952:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2013,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:9"
													},
													{
														"expression": {
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7978:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2019,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7988:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2020,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7997:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2021,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "8001:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2028,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:9"
													},
													{
														"expression": {
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2029,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "8027:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2030,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "8037:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "8046:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2032,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "8050:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:9"
													},
													{
														"expression": {
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "8076:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2041,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "8086:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2042,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "8095:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2043,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "8099:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2050,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2052,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1964,
																	"src": "8136:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "8144:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2054,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "8148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2051,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "8132:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1955,
														"id": 2057,
														"nodeType": "Return",
														"src": "8125:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "6544:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:9"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "6578:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:9"
									},
									"scope": 2556,
									"src": "6530:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "8348:161:9",
										"statements": [
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:9",
												"statements": [
													{
														"assignments": [
															2072
														],
														"declarations": [
															{
																"constant": false,
																"id": 2072,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2094,
																"src": "8382:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2071,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2076,
														"initialValue": {
															"arguments": [
																{
																	"id": 2074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "8404:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2073,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2060,
																	2096
																],
																"referencedDeclaration": 2060,
																"src": "8399:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "8427:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2078,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2066,
																					"src": "8437:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2079,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "8449:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "8449:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2082,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2072,
																						"src": "8464:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2083,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2072,
																						"src": "8473:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2085,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "8482:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2091,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2070,
														"id": 2093,
														"nodeType": "Return",
														"src": "8420:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8286:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8297:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2064,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "8297:8:9"
													},
													"referencedDeclaration": 1697,
													"src": "8297:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:9"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:9"
									},
									"scope": 2556,
									"src": "8272:237:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "8694:922:9",
										"statements": [
											{
												"assignments": [
													2105
												],
												"declarations": [
													{
														"constant": false,
														"id": 2105,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "8704:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"hexValue": "30",
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:9"
											},
											{
												"id": 2224,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2108,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2122,
														"nodeType": "IfStatement",
														"src": "8756:99:9",
														"trueBody": {
															"id": 2121,
															"nodeType": "Block",
															"src": "8778:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "8796:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2116,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:9"
																},
																{
																	"expression": {
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2117,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "8827:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2120,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8872:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2137,
														"nodeType": "IfStatement",
														"src": "8868:96:9",
														"trueBody": {
															"id": 2136,
															"nodeType": "Block",
															"src": "8889:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "8907:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2131,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:9"
																},
																{
																	"expression": {
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2132,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "8937:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2135,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2138,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8981:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2152,
														"nodeType": "IfStatement",
														"src": "8977:96:9",
														"trueBody": {
															"id": 2151,
															"nodeType": "Block",
															"src": "8998:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2143,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9016:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2146,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:9"
																},
																{
																	"expression": {
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2147,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9046:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2150,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2153,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9090:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "9086:96:9",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "9107:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2158,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9125:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2161,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:9"
																},
																{
																	"expression": {
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2162,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9155:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2165,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9199:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2182,
														"nodeType": "IfStatement",
														"src": "9195:93:9",
														"trueBody": {
															"id": 2181,
															"nodeType": "Block",
															"src": "9215:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2173,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9233:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2176,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:9"
																},
																{
																	"expression": {
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9262:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2180,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9305:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2197,
														"nodeType": "IfStatement",
														"src": "9301:93:9",
														"trueBody": {
															"id": 2196,
															"nodeType": "Block",
															"src": "9321:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2188,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:9"
																},
																{
																	"expression": {
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9368:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2195,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2198,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9411:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2212,
														"nodeType": "IfStatement",
														"src": "9407:93:9",
														"trueBody": {
															"id": 2211,
															"nodeType": "Block",
															"src": "9427:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9445:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2206,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:9"
																},
																{
																	"expression": {
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2207,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9474:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2210,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9517:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2223,
														"nodeType": "IfStatement",
														"src": "9513:64:9",
														"trueBody": {
															"id": 2222,
															"nodeType": "Block",
															"src": "9533:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2218,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9551:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2221,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2225,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2105,
													"src": "9603:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2226,
												"nodeType": "Return",
												"src": "9596:13:9"
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "8647:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:9"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "8685:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:9"
									},
									"scope": 2556,
									"src": "8633:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "9849:165:9",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:9",
												"statements": [
													{
														"assignments": [
															2240
														],
														"declarations": [
															{
																"constant": false,
																"id": 2240,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "9883:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2244,
														"initialValue": {
															"arguments": [
																{
																	"id": 2242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2231,
																	"src": "9905:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2241,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2228,
																	2264
																],
																"referencedDeclaration": 2228,
																"src": "9900:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "9932:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2246,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9942:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2247,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "9954:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "9954:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2250,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2251,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2240,
																						"src": "9974:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2253,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2231,
																					"src": "9983:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2259,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2238,
														"id": 2261,
														"nodeType": "Return",
														"src": "9925:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "9783:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "9798:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2232,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "9798:8:9"
													},
													"referencedDeclaration": 1697,
													"src": "9798:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:9"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "9840:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:9"
									},
									"scope": 2556,
									"src": "9769:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "10201:854:9",
										"statements": [
											{
												"assignments": [
													2273
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2392,
														"src": "10211:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"hexValue": "30",
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:9"
											},
											{
												"id": 2389,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10267:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2292,
														"nodeType": "IfStatement",
														"src": "10263:103:9",
														"trueBody": {
															"id": 2291,
															"nodeType": "Block",
															"src": "10286:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10304:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:9"
																},
																{
																	"expression": {
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10339:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2290,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2293,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10383:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "10379:103:9",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "10402:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10420:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2303,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:9"
																},
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2304,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10455:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10499:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2326,
														"nodeType": "IfStatement",
														"src": "10495:103:9",
														"trueBody": {
															"id": 2325,
															"nodeType": "Block",
															"src": "10518:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10536:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2320,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:9"
																},
																{
																	"expression": {
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2321,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10571:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10615:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "10611:100:9",
														"trueBody": {
															"id": 2342,
															"nodeType": "Block",
															"src": "10633:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10651:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:9"
																},
																{
																	"expression": {
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2338,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10685:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2341,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10728:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2360,
														"nodeType": "IfStatement",
														"src": "10724:100:9",
														"trueBody": {
															"id": 2359,
															"nodeType": "Block",
															"src": "10746:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2349,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10764:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2354,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:9"
																},
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2355,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10798:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10841:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2377,
														"nodeType": "IfStatement",
														"src": "10837:100:9",
														"trueBody": {
															"id": 2376,
															"nodeType": "Block",
															"src": "10859:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10877:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2371,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:9"
																},
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10911:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2378,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2388,
														"nodeType": "IfStatement",
														"src": "10950:66:9",
														"trueBody": {
															"id": 2387,
															"nodeType": "Block",
															"src": "10972:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2383,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10990:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2386,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2390,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2273,
													"src": "11042:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2271,
												"id": 2391,
												"nodeType": "Return",
												"src": "11035:13:9"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10154:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:9"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10192:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:9"
									},
									"scope": 2556,
									"src": "10139:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "11290:167:9",
										"statements": [
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:9",
												"statements": [
													{
														"assignments": [
															2405
														],
														"declarations": [
															{
																"constant": false,
																"id": 2405,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "11324:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2404,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2409,
														"initialValue": {
															"arguments": [
																{
																	"id": 2407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11347:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2406,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2393,
																	2429
																],
																"referencedDeclaration": 2393,
																"src": "11341:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2410,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "11374:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2411,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "11384:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2412,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "11396:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "11396:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2416,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2405,
																						"src": "11417:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2418,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "11426:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2403,
														"id": 2426,
														"nodeType": "Return",
														"src": "11367:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "11224:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "11239:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2398,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2397,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "11239:8:9"
													},
													"referencedDeclaration": 1697,
													"src": "11239:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:9"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "11281:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:9"
									},
									"scope": 2556,
									"src": "11209:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2515,
										"nodeType": "Block",
										"src": "11771:600:9",
										"statements": [
											{
												"assignments": [
													2438
												],
												"declarations": [
													{
														"constant": false,
														"id": 2438,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2515,
														"src": "11781:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"initialValue": {
													"hexValue": "30",
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:9"
											},
											{
												"id": 2512,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11837:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2455,
														"nodeType": "IfStatement",
														"src": "11833:98:9",
														"trueBody": {
															"id": 2454,
															"nodeType": "Block",
															"src": "11855:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11873:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:9"
																},
																{
																	"expression": {
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2450,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11904:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2453,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2456,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11948:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "11944:95:9",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "11965:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11983:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:9"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12013:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2471,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "12056:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2485,
														"nodeType": "IfStatement",
														"src": "12052:95:9",
														"trueBody": {
															"id": 2484,
															"nodeType": "Block",
															"src": "12073:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "12091:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2479,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:9"
																},
																{
																	"expression": {
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2480,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12121:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2483,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "12164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2500,
														"nodeType": "IfStatement",
														"src": "12160:95:9",
														"trueBody": {
															"id": 2499,
															"nodeType": "Block",
															"src": "12181:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "12199:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2494,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:9"
																},
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12229:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "12272:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2511,
														"nodeType": "IfStatement",
														"src": "12268:64:9",
														"trueBody": {
															"id": 2510,
															"nodeType": "Block",
															"src": "12288:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2506,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12306:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2509,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2513,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2438,
													"src": "12358:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2514,
												"nodeType": "Return",
												"src": "12351:13:9"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "11724:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:9"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "11762:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:9"
									},
									"scope": 2556,
									"src": "11708:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2554,
										"nodeType": "Block",
										"src": "12608:174:9",
										"statements": [
											{
												"id": 2553,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:9",
												"statements": [
													{
														"assignments": [
															2528
														],
														"declarations": [
															{
																"constant": false,
																"id": 2528,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2553,
																"src": "12642:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2527,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2532,
														"initialValue": {
															"arguments": [
																{
																	"id": 2530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "12666:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2529,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2516,
																	2555
																],
																"referencedDeclaration": 2516,
																"src": "12659:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2533,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "12693:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2534,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2522,
																					"src": "12703:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2535,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "12715:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "12715:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2541,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2539,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2528,
																									"src": "12736:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2540,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2542,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2544,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2519,
																					"src": "12751:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2526,
														"id": 2552,
														"nodeType": "Return",
														"src": "12686:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2517,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "12542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "12557:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2520,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "12557:8:9"
													},
													"referencedDeclaration": 1697,
													"src": "12557:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:9"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "12599:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:9"
									},
									"scope": 2556,
									"src": "12526:256:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2557,
							"src": "202:12582:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:9"
				},
				"id": 9
			},
			".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.9.0/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2661
						]
					},
					"id": 2662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2559,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2661,
							"linearizedBaseContracts": [
								2661
							],
							"name": "SignedMath",
							"nameLocation": "223:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "375:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2569,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "392:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2570,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "396:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2573,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2564,
														"src": "404:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:10",
													"trueExpression": {
														"id": 2572,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "400:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2568,
												"id": 2575,
												"nodeType": "Return",
												"src": "385:20:10"
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "324:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2561,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "334:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2563,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:10"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "367:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2566,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:10"
									},
									"scope": 2661,
									"src": "311:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2594,
										"nodeType": "Block",
										"src": "554:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "571:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2588,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "575:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2591,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "583:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:10",
													"trueExpression": {
														"id": 2590,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2580,
														"src": "579:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2586,
												"id": 2593,
												"nodeType": "Return",
												"src": "564:20:10"
											}
										]
									},
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "503:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2579,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "513:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2581,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:10"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "546:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2584,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:10"
									},
									"scope": 2661,
									"src": "490:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "796:162:10",
										"statements": [
											{
												"assignments": [
													2606
												],
												"declarations": [
													{
														"constant": false,
														"id": 2606,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "858:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2605,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2619,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2607,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2598,
																	"src": "870:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2608,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "874:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2611,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2598,
																				"src": "881:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2612,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2600,
																				"src": "885:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2617,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2620,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "910:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2625,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2606,
																						"src": "930:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2623,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2621,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2630,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2598,
																				"src": "944:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2631,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2600,
																				"src": "948:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2633,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2635,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2604,
												"id": 2637,
												"nodeType": "Return",
												"src": "903:48:10"
											}
										]
									},
									"documentation": {
										"id": 2596,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "745:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2597,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "755:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2599,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:10"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "788:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:10"
									},
									"scope": 2661,
									"src": "728:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "1102:158:10",
										"statements": [
											{
												"id": 2658,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2649,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "1227:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:10",
																		"subExpression": {
																			"id": 2653,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "1241:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:10",
																	"trueExpression": {
																		"id": 2652,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "1236:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2647,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2646,
														"id": 2657,
														"nodeType": "Return",
														"src": "1212:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1060:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2641,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:10"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1093:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:10"
									},
									"scope": 2661,
									"src": "1047:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2662,
							"src": "215:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:10"
				},
				"id": 10
			}
		}
	}
}